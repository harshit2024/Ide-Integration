{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HarshitSrivastava\\\\Desktop\\\\Practice\\\\React\\\\Project2\\\\my-app\\\\src\\\\GitHubRepoCloner.js\",\n  _s = $RefreshSig$();\n// src/GitHubRepoCloner.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GitHubRepoCloner = () => {\n  _s();\n  const [repositoryUrl, setRepositoryUrl] = useState('');\n  const cloneRepository = async () => {\n    try {\n      const response = await axios.post('http://localhost:3001/clone', {\n        repositoryUrl\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GitHub Repository Cloner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: repositoryUrl,\n      onChange: e => setRepositoryUrl(e.target.value),\n      placeholder: \"Enter repository URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cloneRepository,\n      children: \"Clone Repository\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(GitHubRepoCloner, \"qiPS6iq/+GAn+DqOMxjYsJmgw6s=\");\n_c = GitHubRepoCloner;\nexport default GitHubRepoCloner;\nvar _c;\n$RefreshReg$(_c, \"GitHubRepoCloner\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GitHubRepoCloner","_s","repositoryUrl","setRepositoryUrl","cloneRepository","response","post","console","log","data","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HarshitSrivastava/Desktop/Practice/React/Project2/my-app/src/GitHubRepoCloner.js"],"sourcesContent":["// src/GitHubRepoCloner.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GitHubRepoCloner = () => {\r\n  const [repositoryUrl, setRepositoryUrl] = useState('');\r\n\r\n  const cloneRepository = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/clone', {\r\n        repositoryUrl,\r\n      });\r\n\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>GitHub Repository Cloner</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={repositoryUrl}\r\n        onChange={(e) => setRepositoryUrl(e.target.value)}\r\n        placeholder=\"Enter repository URL\"\r\n      />\r\n      <button onClick={cloneRepository}>Clone Repository</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GitHubRepoCloner;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,6BAA6B,EAAE;QAC/DJ;MACF,CAAC,CAAC;MAEFK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACC,OAAO,CAAC;IACxC;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,aAAc;MACrBiB,QAAQ,EAAGC,CAAC,IAAKjB,gBAAgB,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDI,WAAW,EAAC;IAAsB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACFjB,OAAA;MAAQwB,OAAO,EAAEnB,eAAgB;MAAAQ,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BID,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AA6BtB,eAAeA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}