{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FSWatcher = exports.StatWatcher = exports.Volume = exports.toUnixTimestamp = exports.dataToStr = exports.pathToSteps = exports.filenameToSteps = void 0;\nconst pathModule = require(\"path\");\nconst node_1 = require(\"./node\");\nconst Stats_1 = require(\"./Stats\");\nconst Dirent_1 = require(\"./Dirent\");\nconst buffer_1 = require(\"./internal/buffer\");\nconst setImmediate_1 = require(\"./setImmediate\");\nconst queueMicrotask_1 = require(\"./queueMicrotask\");\nconst process_1 = require(\"./process\");\nconst setTimeoutUnref_1 = require(\"./setTimeoutUnref\");\nconst stream_1 = require(\"stream\");\nconst constants_1 = require(\"./constants\");\nconst events_1 = require(\"events\");\nconst encoding_1 = require(\"./encoding\");\nconst FileHandle_1 = require(\"./node/FileHandle\");\nconst util = require(\"util\");\nconst FsPromises_1 = require(\"./node/FsPromises\");\nconst print_1 = require(\"./print\");\nconst constants_2 = require(\"./node/constants\");\nconst options_1 = require(\"./node/options\");\nconst util_1 = require(\"./node/util\");\nconst resolveCrossPlatform = pathModule.resolve;\nconst {\n  O_RDONLY,\n  O_WRONLY,\n  O_RDWR,\n  O_CREAT,\n  O_EXCL,\n  O_TRUNC,\n  O_APPEND,\n  O_DIRECTORY,\n  O_SYMLINK,\n  F_OK,\n  COPYFILE_EXCL,\n  COPYFILE_FICLONE_FORCE\n} = constants_1.constants;\nconst {\n  sep,\n  relative,\n  join,\n  dirname\n} = pathModule.posix ? pathModule.posix : pathModule;\n// ---------------------------------------- Constants\nconst kMinPoolSpace = 128;\n// ---------------------------------------- Error messages\nconst EPERM = 'EPERM';\nconst ENOENT = 'ENOENT';\nconst EBADF = 'EBADF';\nconst EINVAL = 'EINVAL';\nconst EEXIST = 'EEXIST';\nconst ENOTDIR = 'ENOTDIR';\nconst EMFILE = 'EMFILE';\nconst EACCES = 'EACCES';\nconst EISDIR = 'EISDIR';\nconst ENOTEMPTY = 'ENOTEMPTY';\nconst ENOSYS = 'ENOSYS';\nconst ERR_FS_EISDIR = 'ERR_FS_EISDIR';\nconst ERR_OUT_OF_RANGE = 'ERR_OUT_OF_RANGE';\nlet resolve = (filename, base = process_1.default.cwd()) => resolveCrossPlatform(base, filename);\nif (util_1.isWin) {\n  const _resolve = resolve;\n  resolve = (filename, base) => (0, util_1.unixify)(_resolve(filename, base));\n}\nfunction filenameToSteps(filename, base) {\n  const fullPath = resolve(filename, base);\n  const fullPathSansSlash = fullPath.substring(1);\n  if (!fullPathSansSlash) return [];\n  return fullPathSansSlash.split(sep);\n}\nexports.filenameToSteps = filenameToSteps;\nfunction pathToSteps(path) {\n  return filenameToSteps((0, util_1.pathToFilename)(path));\n}\nexports.pathToSteps = pathToSteps;\nfunction dataToStr(data, encoding = encoding_1.ENCODING_UTF8) {\n  if (buffer_1.Buffer.isBuffer(data)) return data.toString(encoding);else if (data instanceof Uint8Array) return (0, buffer_1.bufferFrom)(data).toString(encoding);else return String(data);\n}\nexports.dataToStr = dataToStr;\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time) {\n  // tslint:disable-next-line triple-equals\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n  if (time instanceof Date) {\n    return time.getTime() / 1000;\n  }\n  if (isFinite(time)) {\n    if (time < 0) {\n      return Date.now() / 1000;\n    }\n    return time;\n  }\n  throw new Error('Cannot parse time: ' + time);\n}\nexports.toUnixTimestamp = toUnixTimestamp;\nfunction validateUid(uid) {\n  if (typeof uid !== 'number') throw TypeError(constants_2.ERRSTR.UID);\n}\nfunction validateGid(gid) {\n  if (typeof gid !== 'number') throw TypeError(constants_2.ERRSTR.GID);\n}\nfunction flattenJSON(nestedJSON) {\n  const flatJSON = {};\n  function flatten(pathPrefix, node) {\n    for (const path in node) {\n      const contentOrNode = node[path];\n      const joinedPath = join(pathPrefix, path);\n      if (typeof contentOrNode === 'string' || contentOrNode instanceof buffer_1.Buffer) {\n        flatJSON[joinedPath] = contentOrNode;\n      } else if (typeof contentOrNode === 'object' && contentOrNode !== null && Object.keys(contentOrNode).length > 0) {\n        // empty directories need an explicit entry and therefore get handled in `else`, non-empty ones are implicitly considered\n        flatten(joinedPath, contentOrNode);\n      } else {\n        // without this branch null, empty-object or non-object entries would not be handled in the same way\n        // by both fromJSON() and fromNestedJSON()\n        flatJSON[joinedPath] = null;\n      }\n    }\n  }\n  flatten('', nestedJSON);\n  return flatJSON;\n}\nconst notImplemented = () => {\n  throw new Error('Not implemented');\n};\n/**\n * `Volume` represents a file system.\n */\nclass Volume {\n  static fromJSON(json, cwd) {\n    const vol = new Volume();\n    vol.fromJSON(json, cwd);\n    return vol;\n  }\n  static fromNestedJSON(json, cwd) {\n    const vol = new Volume();\n    vol.fromNestedJSON(json, cwd);\n    return vol;\n  }\n  get promises() {\n    if (this.promisesApi === null) throw new Error('Promise is not supported in this environment.');\n    return this.promisesApi;\n  }\n  constructor(props = {}) {\n    // I-node number counter.\n    this.ino = 0;\n    // A mapping for i-node numbers to i-nodes (`Node`);\n    this.inodes = {};\n    // List of released i-node numbers, for reuse.\n    this.releasedInos = [];\n    // A mapping for file descriptors to `File`s.\n    this.fds = {};\n    // A list of reusable (opened and closed) file descriptors, that should be\n    // used first before creating a new file descriptor.\n    this.releasedFds = [];\n    // Max number of open files.\n    this.maxFiles = 10000;\n    // Current number of open files.\n    this.openFiles = 0;\n    this.promisesApi = new FsPromises_1.FsPromises(this, FileHandle_1.FileHandle);\n    this.statWatchers = {};\n    this.cpSync = notImplemented;\n    this.lutimesSync = notImplemented;\n    this.statfsSync = notImplemented;\n    this.opendirSync = notImplemented;\n    this.cp = notImplemented;\n    this.lutimes = notImplemented;\n    this.statfs = notImplemented;\n    this.openAsBlob = notImplemented;\n    this.opendir = notImplemented;\n    this.props = Object.assign({\n      Node: node_1.Node,\n      Link: node_1.Link,\n      File: node_1.File\n    }, props);\n    const root = this.createLink();\n    root.setNode(this.createNode(true));\n    const self = this; // tslint:disable-line no-this-assignment\n    this.StatWatcher = class extends StatWatcher {\n      constructor() {\n        super(self);\n      }\n    };\n    const _ReadStream = FsReadStream;\n    this.ReadStream = class extends _ReadStream {\n      constructor(...args) {\n        super(self, ...args);\n      }\n    };\n    const _WriteStream = FsWriteStream;\n    this.WriteStream = class extends _WriteStream {\n      constructor(...args) {\n        super(self, ...args);\n      }\n    };\n    this.FSWatcher = class extends FSWatcher {\n      constructor() {\n        super(self);\n      }\n    };\n    root.setChild('.', root);\n    root.getNode().nlink++;\n    root.setChild('..', root);\n    root.getNode().nlink++;\n    this.root = root;\n  }\n  createLink(parent, name, isDirectory = false, perm) {\n    if (!parent) {\n      return new this.props.Link(this, null, '');\n    }\n    if (!name) {\n      throw new Error('createLink: name cannot be empty');\n    }\n    return parent.createChild(name, this.createNode(isDirectory, perm));\n  }\n  deleteLink(link) {\n    const parent = link.parent;\n    if (parent) {\n      parent.deleteChild(link);\n      return true;\n    }\n    return false;\n  }\n  newInoNumber() {\n    const releasedFd = this.releasedInos.pop();\n    if (releasedFd) return releasedFd;else {\n      this.ino = (this.ino + 1) % 0xffffffff;\n      return this.ino;\n    }\n  }\n  newFdNumber() {\n    const releasedFd = this.releasedFds.pop();\n    return typeof releasedFd === 'number' ? releasedFd : Volume.fd--;\n  }\n  createNode(isDirectory = false, perm) {\n    const node = new this.props.Node(this.newInoNumber(), perm);\n    if (isDirectory) node.setIsDirectory();\n    this.inodes[node.ino] = node;\n    return node;\n  }\n  deleteNode(node) {\n    node.del();\n    delete this.inodes[node.ino];\n    this.releasedInos.push(node.ino);\n  }\n  // Returns a `Link` (hard link) referenced by path \"split\" into steps.\n  getLink(steps) {\n    return this.root.walk(steps);\n  }\n  // Just link `getLink`, but throws a correct user error, if link to found.\n  getLinkOrThrow(filename, funcName) {\n    const steps = filenameToSteps(filename);\n    const link = this.getLink(steps);\n    if (!link) throw (0, util_1.createError)(ENOENT, funcName, filename);\n    return link;\n  }\n  // Just like `getLink`, but also dereference/resolves symbolic links.\n  getResolvedLink(filenameOrSteps) {\n    let steps = typeof filenameOrSteps === 'string' ? filenameToSteps(filenameOrSteps) : filenameOrSteps;\n    let link = this.root;\n    let i = 0;\n    while (i < steps.length) {\n      const step = steps[i];\n      link = link.getChild(step);\n      if (!link) return null;\n      const node = link.getNode();\n      if (node.isSymlink()) {\n        steps = node.symlink.concat(steps.slice(i + 1));\n        link = this.root;\n        i = 0;\n        continue;\n      }\n      i++;\n    }\n    return link;\n  }\n  // Just like `getLinkOrThrow`, but also dereference/resolves symbolic links.\n  getResolvedLinkOrThrow(filename, funcName) {\n    const link = this.getResolvedLink(filename);\n    if (!link) throw (0, util_1.createError)(ENOENT, funcName, filename);\n    return link;\n  }\n  resolveSymlinks(link) {\n    // let node: Node = link.getNode();\n    // while(link && node.isSymlink()) {\n    //     link = this.getLink(node.symlink);\n    //     if(!link) return null;\n    //     node = link.getNode();\n    // }\n    // return link;\n    return this.getResolvedLink(link.steps.slice(1));\n  }\n  // Just like `getLinkOrThrow`, but also verifies that the link is a directory.\n  getLinkAsDirOrThrow(filename, funcName) {\n    const link = this.getLinkOrThrow(filename, funcName);\n    if (!link.getNode().isDirectory()) throw (0, util_1.createError)(ENOTDIR, funcName, filename);\n    return link;\n  }\n  // Get the immediate parent directory of the link.\n  getLinkParent(steps) {\n    return this.root.walk(steps, steps.length - 1);\n  }\n  getLinkParentAsDirOrThrow(filenameOrSteps, funcName) {\n    const steps = filenameOrSteps instanceof Array ? filenameOrSteps : filenameToSteps(filenameOrSteps);\n    const link = this.getLinkParent(steps);\n    if (!link) throw (0, util_1.createError)(ENOENT, funcName, sep + steps.join(sep));\n    if (!link.getNode().isDirectory()) throw (0, util_1.createError)(ENOTDIR, funcName, sep + steps.join(sep));\n    return link;\n  }\n  getFileByFd(fd) {\n    return this.fds[String(fd)];\n  }\n  getFileByFdOrThrow(fd, funcName) {\n    if (!(0, util_1.isFd)(fd)) throw TypeError(constants_2.ERRSTR.FD);\n    const file = this.getFileByFd(fd);\n    if (!file) throw (0, util_1.createError)(EBADF, funcName);\n    return file;\n  }\n  /**\n   * @todo This is not used anymore. Remove.\n   */\n  /*\n  private getNodeByIdOrCreate(id: TFileId, flags: number, perm: number): Node {\n    if (typeof id === 'number') {\n      const file = this.getFileByFd(id);\n      if (!file) throw Error('File nto found');\n      return file.node;\n    } else {\n      const steps = pathToSteps(id as PathLike);\n      let link = this.getLink(steps);\n      if (link) return link.getNode();\n         // Try creating a node if not found.\n      if (flags & O_CREAT) {\n        const dirLink = this.getLinkParent(steps);\n        if (dirLink) {\n          const name = steps[steps.length - 1];\n          link = this.createLink(dirLink, name, false, perm);\n          return link.getNode();\n        }\n      }\n         throw createError(ENOENT, 'getNodeByIdOrCreate', pathToFilename(id));\n    }\n  }\n  */\n  wrapAsync(method, args, callback) {\n    (0, util_1.validateCallback)(callback);\n    (0, setImmediate_1.default)(() => {\n      let result;\n      try {\n        result = method.apply(this, args);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      callback(null, result);\n    });\n  }\n  _toJSON(link = this.root, json = {}, path, asBuffer) {\n    let isEmpty = true;\n    let children = link.children;\n    if (link.getNode().isFile()) {\n      children = new Map([[link.getName(), link.parent.getChild(link.getName())]]);\n      link = link.parent;\n    }\n    for (const name of children.keys()) {\n      if (name === '.' || name === '..') {\n        continue;\n      }\n      isEmpty = false;\n      const child = link.getChild(name);\n      if (!child) {\n        throw new Error('_toJSON: unexpected undefined');\n      }\n      const node = child.getNode();\n      if (node.isFile()) {\n        let filename = child.getPath();\n        if (path) filename = relative(path, filename);\n        json[filename] = asBuffer ? node.getBuffer() : node.getString();\n      } else if (node.isDirectory()) {\n        this._toJSON(child, json, path);\n      }\n    }\n    let dirPath = link.getPath();\n    if (path) dirPath = relative(path, dirPath);\n    if (dirPath && isEmpty) {\n      json[dirPath] = null;\n    }\n    return json;\n  }\n  toJSON(paths, json = {}, isRelative = false, asBuffer = false) {\n    const links = [];\n    if (paths) {\n      if (!Array.isArray(paths)) paths = [paths];\n      for (const path of paths) {\n        const filename = (0, util_1.pathToFilename)(path);\n        const link = this.getResolvedLink(filename);\n        if (!link) continue;\n        links.push(link);\n      }\n    } else {\n      links.push(this.root);\n    }\n    if (!links.length) return json;\n    for (const link of links) this._toJSON(link, json, isRelative ? link.getPath() : '', asBuffer);\n    return json;\n  }\n  // TODO: `cwd` should probably not invoke `process.cwd()`.\n  fromJSON(json, cwd = process_1.default.cwd()) {\n    for (let filename in json) {\n      const data = json[filename];\n      filename = resolve(filename, cwd);\n      if (typeof data === 'string' || data instanceof buffer_1.Buffer) {\n        const dir = dirname(filename);\n        this.mkdirpBase(dir, 511 /* MODE.DIR */);\n        this.writeFileSync(filename, data);\n      } else {\n        this.mkdirpBase(filename, 511 /* MODE.DIR */);\n      }\n    }\n  }\n  fromNestedJSON(json, cwd) {\n    this.fromJSON(flattenJSON(json), cwd);\n  }\n  toTree(opts = {\n    separator: sep\n  }) {\n    return (0, print_1.toTreeSync)(this, opts);\n  }\n  reset() {\n    this.ino = 0;\n    this.inodes = {};\n    this.releasedInos = [];\n    this.fds = {};\n    this.releasedFds = [];\n    this.openFiles = 0;\n    this.root = this.createLink();\n    this.root.setNode(this.createNode(true));\n  }\n  // Legacy interface\n  mountSync(mountpoint, json) {\n    this.fromJSON(json, mountpoint);\n  }\n  openLink(link, flagsNum, resolveSymlinks = true) {\n    if (this.openFiles >= this.maxFiles) {\n      // Too many open files.\n      throw (0, util_1.createError)(EMFILE, 'open', link.getPath());\n    }\n    // Resolve symlinks.\n    let realLink = link;\n    if (resolveSymlinks) realLink = this.resolveSymlinks(link);\n    if (!realLink) throw (0, util_1.createError)(ENOENT, 'open', link.getPath());\n    const node = realLink.getNode();\n    // Check whether node is a directory\n    if (node.isDirectory()) {\n      if ((flagsNum & (O_RDONLY | O_RDWR | O_WRONLY)) !== O_RDONLY) throw (0, util_1.createError)(EISDIR, 'open', link.getPath());\n    } else {\n      if (flagsNum & O_DIRECTORY) throw (0, util_1.createError)(ENOTDIR, 'open', link.getPath());\n    }\n    // Check node permissions\n    if (!(flagsNum & O_WRONLY)) {\n      if (!node.canRead()) {\n        throw (0, util_1.createError)(EACCES, 'open', link.getPath());\n      }\n    }\n    if (flagsNum & O_RDWR) {}\n    const file = new this.props.File(link, node, flagsNum, this.newFdNumber());\n    this.fds[file.fd] = file;\n    this.openFiles++;\n    if (flagsNum & O_TRUNC) file.truncate();\n    return file;\n  }\n  openFile(filename, flagsNum, modeNum, resolveSymlinks = true) {\n    const steps = filenameToSteps(filename);\n    let link = resolveSymlinks ? this.getResolvedLink(steps) : this.getLink(steps);\n    if (link && flagsNum & O_EXCL) throw (0, util_1.createError)(EEXIST, 'open', filename);\n    // Try creating a new file, if it does not exist.\n    if (!link && flagsNum & O_CREAT) {\n      // const dirLink: Link = this.getLinkParent(steps);\n      const dirLink = this.getResolvedLink(steps.slice(0, steps.length - 1));\n      // if(!dirLink) throw createError(ENOENT, 'open', filename);\n      if (!dirLink) throw (0, util_1.createError)(ENOENT, 'open', sep + steps.join(sep));\n      if (flagsNum & O_CREAT && typeof modeNum === 'number') {\n        link = this.createLink(dirLink, steps[steps.length - 1], false, modeNum);\n      }\n    }\n    if (link) return this.openLink(link, flagsNum, resolveSymlinks);\n    throw (0, util_1.createError)(ENOENT, 'open', filename);\n  }\n  openBase(filename, flagsNum, modeNum, resolveSymlinks = true) {\n    const file = this.openFile(filename, flagsNum, modeNum, resolveSymlinks);\n    if (!file) throw (0, util_1.createError)(ENOENT, 'open', filename);\n    return file.fd;\n  }\n  openSync(path, flags, mode = 438 /* MODE.DEFAULT */) {\n    // Validate (1) mode; (2) path; (3) flags - in that order.\n    const modeNum = (0, util_1.modeToNumber)(mode);\n    const fileName = (0, util_1.pathToFilename)(path);\n    const flagsNum = (0, util_1.flagsToNumber)(flags);\n    return this.openBase(fileName, flagsNum, modeNum, !(flagsNum & O_SYMLINK));\n  }\n  open(path, flags, a, b) {\n    let mode = a;\n    let callback = b;\n    if (typeof a === 'function') {\n      mode = 438 /* MODE.DEFAULT */;\n      callback = a;\n    }\n    mode = mode || 438 /* MODE.DEFAULT */;\n    const modeNum = (0, util_1.modeToNumber)(mode);\n    const fileName = (0, util_1.pathToFilename)(path);\n    const flagsNum = (0, util_1.flagsToNumber)(flags);\n    this.wrapAsync(this.openBase, [fileName, flagsNum, modeNum, !(flagsNum & O_SYMLINK)], callback);\n  }\n  closeFile(file) {\n    if (!this.fds[file.fd]) return;\n    this.openFiles--;\n    delete this.fds[file.fd];\n    this.releasedFds.push(file.fd);\n  }\n  closeSync(fd) {\n    (0, util_1.validateFd)(fd);\n    const file = this.getFileByFdOrThrow(fd, 'close');\n    this.closeFile(file);\n  }\n  close(fd, callback) {\n    (0, util_1.validateFd)(fd);\n    this.wrapAsync(this.closeSync, [fd], callback);\n  }\n  openFileOrGetById(id, flagsNum, modeNum) {\n    if (typeof id === 'number') {\n      const file = this.fds[id];\n      if (!file) throw (0, util_1.createError)(ENOENT);\n      return file;\n    } else {\n      return this.openFile((0, util_1.pathToFilename)(id), flagsNum, modeNum);\n    }\n  }\n  readBase(fd, buffer, offset, length, position) {\n    if (buffer.byteLength < length) {\n      throw (0, util_1.createError)(ERR_OUT_OF_RANGE, 'read', undefined, undefined, RangeError);\n    }\n    const file = this.getFileByFdOrThrow(fd);\n    if (file.node.isSymlink()) {\n      throw (0, util_1.createError)(EPERM, 'read', file.link.getPath());\n    }\n    return file.read(buffer, Number(offset), Number(length), position === -1 || typeof position !== 'number' ? undefined : position);\n  }\n  readSync(fd, buffer, offset, length, position) {\n    (0, util_1.validateFd)(fd);\n    return this.readBase(fd, buffer, offset, length, position);\n  }\n  read(fd, buffer, offset, length, position, callback) {\n    (0, util_1.validateCallback)(callback);\n    // This `if` branch is from Node.js\n    if (length === 0) {\n      return (0, queueMicrotask_1.default)(() => {\n        if (callback) callback(null, 0, buffer);\n      });\n    }\n    (0, setImmediate_1.default)(() => {\n      try {\n        const bytes = this.readBase(fd, buffer, offset, length, position);\n        callback(null, bytes, buffer);\n      } catch (err) {\n        callback(err);\n      }\n    });\n  }\n  readvBase(fd, buffers, position) {\n    const file = this.getFileByFdOrThrow(fd);\n    let p = position !== null && position !== void 0 ? position : undefined;\n    if (p === -1) {\n      p = undefined;\n    }\n    let bytesRead = 0;\n    for (const buffer of buffers) {\n      const bytes = file.read(buffer, 0, buffer.byteLength, p);\n      p = undefined;\n      bytesRead += bytes;\n      if (bytes < buffer.byteLength) break;\n    }\n    return bytesRead;\n  }\n  readv(fd, buffers, a, b) {\n    let position = a;\n    let callback = b;\n    if (typeof a === 'function') {\n      position = null;\n      callback = a;\n    }\n    (0, util_1.validateCallback)(callback);\n    (0, setImmediate_1.default)(() => {\n      try {\n        const bytes = this.readvBase(fd, buffers, position);\n        callback(null, bytes, buffers);\n      } catch (err) {\n        callback(err);\n      }\n    });\n  }\n  readvSync(fd, buffers, position) {\n    (0, util_1.validateFd)(fd);\n    return this.readvBase(fd, buffers, position);\n  }\n  readFileBase(id, flagsNum, encoding) {\n    let result;\n    const isUserFd = typeof id === 'number';\n    const userOwnsFd = isUserFd && (0, util_1.isFd)(id);\n    let fd;\n    if (userOwnsFd) fd = id;else {\n      const filename = (0, util_1.pathToFilename)(id);\n      const steps = filenameToSteps(filename);\n      const link = this.getResolvedLink(steps);\n      if (link) {\n        const node = link.getNode();\n        if (node.isDirectory()) throw (0, util_1.createError)(EISDIR, 'open', link.getPath());\n      }\n      fd = this.openSync(id, flagsNum);\n    }\n    try {\n      result = (0, util_1.bufferToEncoding)(this.getFileByFdOrThrow(fd).getBuffer(), encoding);\n    } finally {\n      if (!userOwnsFd) {\n        this.closeSync(fd);\n      }\n    }\n    return result;\n  }\n  readFileSync(file, options) {\n    const opts = (0, options_1.getReadFileOptions)(options);\n    const flagsNum = (0, util_1.flagsToNumber)(opts.flag);\n    return this.readFileBase(file, flagsNum, opts.encoding);\n  }\n  readFile(id, a, b) {\n    const [opts, callback] = (0, options_1.optsAndCbGenerator)(options_1.getReadFileOptions)(a, b);\n    const flagsNum = (0, util_1.flagsToNumber)(opts.flag);\n    this.wrapAsync(this.readFileBase, [id, flagsNum, opts.encoding], callback);\n  }\n  writeBase(fd, buf, offset, length, position) {\n    const file = this.getFileByFdOrThrow(fd, 'write');\n    if (file.node.isSymlink()) {\n      throw (0, util_1.createError)(EBADF, 'write', file.link.getPath());\n    }\n    return file.write(buf, offset, length, position === -1 || typeof position !== 'number' ? undefined : position);\n  }\n  writeSync(fd, a, b, c, d) {\n    const [, buf, offset, length, position] = (0, util_1.getWriteSyncArgs)(fd, a, b, c, d);\n    return this.writeBase(fd, buf, offset, length, position);\n  }\n  write(fd, a, b, c, d, e) {\n    const [, asStr, buf, offset, length, position, cb] = (0, util_1.getWriteArgs)(fd, a, b, c, d, e);\n    (0, setImmediate_1.default)(() => {\n      try {\n        const bytes = this.writeBase(fd, buf, offset, length, position);\n        if (!asStr) {\n          cb(null, bytes, buf);\n        } else {\n          cb(null, bytes, a);\n        }\n      } catch (err) {\n        cb(err);\n      }\n    });\n  }\n  writevBase(fd, buffers, position) {\n    const file = this.getFileByFdOrThrow(fd);\n    let p = position !== null && position !== void 0 ? position : undefined;\n    if (p === -1) {\n      p = undefined;\n    }\n    let bytesWritten = 0;\n    for (const buffer of buffers) {\n      const nodeBuf = buffer_1.Buffer.from(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n      const bytes = file.write(nodeBuf, 0, nodeBuf.byteLength, p);\n      p = undefined;\n      bytesWritten += bytes;\n      if (bytes < nodeBuf.byteLength) break;\n    }\n    return bytesWritten;\n  }\n  writev(fd, buffers, a, b) {\n    let position = a;\n    let callback = b;\n    if (typeof a === 'function') {\n      position = null;\n      callback = a;\n    }\n    (0, util_1.validateCallback)(callback);\n    (0, setImmediate_1.default)(() => {\n      try {\n        const bytes = this.writevBase(fd, buffers, position);\n        callback(null, bytes, buffers);\n      } catch (err) {\n        callback(err);\n      }\n    });\n  }\n  writevSync(fd, buffers, position) {\n    (0, util_1.validateFd)(fd);\n    return this.writevBase(fd, buffers, position);\n  }\n  writeFileBase(id, buf, flagsNum, modeNum) {\n    // console.log('writeFileBase', id, buf, flagsNum, modeNum);\n    // const node = this.getNodeByIdOrCreate(id, flagsNum, modeNum);\n    // node.setBuffer(buf);\n    const isUserFd = typeof id === 'number';\n    let fd;\n    if (isUserFd) fd = id;else {\n      fd = this.openBase((0, util_1.pathToFilename)(id), flagsNum, modeNum);\n      // fd = this.openSync(id as PathLike, flagsNum, modeNum);\n    }\n    let offset = 0;\n    let length = buf.length;\n    let position = flagsNum & O_APPEND ? undefined : 0;\n    try {\n      while (length > 0) {\n        const written = this.writeSync(fd, buf, offset, length, position);\n        offset += written;\n        length -= written;\n        if (position !== undefined) position += written;\n      }\n    } finally {\n      if (!isUserFd) this.closeSync(fd);\n    }\n  }\n  writeFileSync(id, data, options) {\n    const opts = (0, options_1.getWriteFileOptions)(options);\n    const flagsNum = (0, util_1.flagsToNumber)(opts.flag);\n    const modeNum = (0, util_1.modeToNumber)(opts.mode);\n    const buf = (0, util_1.dataToBuffer)(data, opts.encoding);\n    this.writeFileBase(id, buf, flagsNum, modeNum);\n  }\n  writeFile(id, data, a, b) {\n    let options = a;\n    let callback = b;\n    if (typeof a === 'function') {\n      options = options_1.writeFileDefaults;\n      callback = a;\n    }\n    const cb = (0, util_1.validateCallback)(callback);\n    const opts = (0, options_1.getWriteFileOptions)(options);\n    const flagsNum = (0, util_1.flagsToNumber)(opts.flag);\n    const modeNum = (0, util_1.modeToNumber)(opts.mode);\n    const buf = (0, util_1.dataToBuffer)(data, opts.encoding);\n    this.wrapAsync(this.writeFileBase, [id, buf, flagsNum, modeNum], cb);\n  }\n  linkBase(filename1, filename2) {\n    const steps1 = filenameToSteps(filename1);\n    const link1 = this.getLink(steps1);\n    if (!link1) throw (0, util_1.createError)(ENOENT, 'link', filename1, filename2);\n    const steps2 = filenameToSteps(filename2);\n    // Check new link directory exists.\n    const dir2 = this.getLinkParent(steps2);\n    if (!dir2) throw (0, util_1.createError)(ENOENT, 'link', filename1, filename2);\n    const name = steps2[steps2.length - 1];\n    // Check if new file already exists.\n    if (dir2.getChild(name)) throw (0, util_1.createError)(EEXIST, 'link', filename1, filename2);\n    const node = link1.getNode();\n    node.nlink++;\n    dir2.createChild(name, node);\n  }\n  copyFileBase(src, dest, flags) {\n    const buf = this.readFileSync(src);\n    if (flags & COPYFILE_EXCL) {\n      if (this.existsSync(dest)) {\n        throw (0, util_1.createError)(EEXIST, 'copyFile', src, dest);\n      }\n    }\n    if (flags & COPYFILE_FICLONE_FORCE) {\n      throw (0, util_1.createError)(ENOSYS, 'copyFile', src, dest);\n    }\n    this.writeFileBase(dest, buf, constants_2.FLAGS.w, 438 /* MODE.DEFAULT */);\n  }\n  copyFileSync(src, dest, flags) {\n    const srcFilename = (0, util_1.pathToFilename)(src);\n    const destFilename = (0, util_1.pathToFilename)(dest);\n    return this.copyFileBase(srcFilename, destFilename, (flags || 0) | 0);\n  }\n  copyFile(src, dest, a, b) {\n    const srcFilename = (0, util_1.pathToFilename)(src);\n    const destFilename = (0, util_1.pathToFilename)(dest);\n    let flags;\n    let callback;\n    if (typeof a === 'function') {\n      flags = 0;\n      callback = a;\n    } else {\n      flags = a;\n      callback = b;\n    }\n    (0, util_1.validateCallback)(callback);\n    this.wrapAsync(this.copyFileBase, [srcFilename, destFilename, flags], callback);\n  }\n  linkSync(existingPath, newPath) {\n    const existingPathFilename = (0, util_1.pathToFilename)(existingPath);\n    const newPathFilename = (0, util_1.pathToFilename)(newPath);\n    this.linkBase(existingPathFilename, newPathFilename);\n  }\n  link(existingPath, newPath, callback) {\n    const existingPathFilename = (0, util_1.pathToFilename)(existingPath);\n    const newPathFilename = (0, util_1.pathToFilename)(newPath);\n    this.wrapAsync(this.linkBase, [existingPathFilename, newPathFilename], callback);\n  }\n  unlinkBase(filename) {\n    const steps = filenameToSteps(filename);\n    const link = this.getLink(steps);\n    if (!link) throw (0, util_1.createError)(ENOENT, 'unlink', filename);\n    // TODO: Check if it is file, dir, other...\n    if (link.length) throw Error('Dir not empty...');\n    this.deleteLink(link);\n    const node = link.getNode();\n    node.nlink--;\n    // When all hard links to i-node are deleted, remove the i-node, too.\n    if (node.nlink <= 0) {\n      this.deleteNode(node);\n    }\n  }\n  unlinkSync(path) {\n    const filename = (0, util_1.pathToFilename)(path);\n    this.unlinkBase(filename);\n  }\n  unlink(path, callback) {\n    const filename = (0, util_1.pathToFilename)(path);\n    this.wrapAsync(this.unlinkBase, [filename], callback);\n  }\n  symlinkBase(targetFilename, pathFilename) {\n    const pathSteps = filenameToSteps(pathFilename);\n    // Check if directory exists, where we about to create a symlink.\n    const dirLink = this.getLinkParent(pathSteps);\n    if (!dirLink) throw (0, util_1.createError)(ENOENT, 'symlink', targetFilename, pathFilename);\n    const name = pathSteps[pathSteps.length - 1];\n    // Check if new file already exists.\n    if (dirLink.getChild(name)) throw (0, util_1.createError)(EEXIST, 'symlink', targetFilename, pathFilename);\n    // Create symlink.\n    const symlink = dirLink.createChild(name);\n    symlink.getNode().makeSymlink(filenameToSteps(targetFilename));\n    return symlink;\n  }\n  // `type` argument works only on Windows.\n  symlinkSync(target, path, type) {\n    const targetFilename = (0, util_1.pathToFilename)(target);\n    const pathFilename = (0, util_1.pathToFilename)(path);\n    this.symlinkBase(targetFilename, pathFilename);\n  }\n  symlink(target, path, a, b) {\n    const callback = (0, util_1.validateCallback)(typeof a === 'function' ? a : b);\n    const targetFilename = (0, util_1.pathToFilename)(target);\n    const pathFilename = (0, util_1.pathToFilename)(path);\n    this.wrapAsync(this.symlinkBase, [targetFilename, pathFilename], callback);\n  }\n  realpathBase(filename, encoding) {\n    const steps = filenameToSteps(filename);\n    const realLink = this.getResolvedLink(steps);\n    if (!realLink) throw (0, util_1.createError)(ENOENT, 'realpath', filename);\n    return (0, encoding_1.strToEncoding)(realLink.getPath() || '/', encoding);\n  }\n  realpathSync(path, options) {\n    return this.realpathBase((0, util_1.pathToFilename)(path), (0, options_1.getRealpathOptions)(options).encoding);\n  }\n  realpath(path, a, b) {\n    const [opts, callback] = (0, options_1.getRealpathOptsAndCb)(a, b);\n    const pathFilename = (0, util_1.pathToFilename)(path);\n    this.wrapAsync(this.realpathBase, [pathFilename, opts.encoding], callback);\n  }\n  lstatBase(filename, bigint = false, throwIfNoEntry = false) {\n    const link = this.getLink(filenameToSteps(filename));\n    if (link) {\n      return Stats_1.default.build(link.getNode(), bigint);\n    } else if (!throwIfNoEntry) {\n      return undefined;\n    } else {\n      throw (0, util_1.createError)(ENOENT, 'lstat', filename);\n    }\n  }\n  lstatSync(path, options) {\n    const {\n      throwIfNoEntry = true,\n      bigint = false\n    } = (0, options_1.getStatOptions)(options);\n    return this.lstatBase((0, util_1.pathToFilename)(path), bigint, throwIfNoEntry);\n  }\n  lstat(path, a, b) {\n    const [{\n      throwIfNoEntry = true,\n      bigint = false\n    }, callback] = (0, options_1.getStatOptsAndCb)(a, b);\n    this.wrapAsync(this.lstatBase, [(0, util_1.pathToFilename)(path), bigint, throwIfNoEntry], callback);\n  }\n  statBase(filename, bigint = false, throwIfNoEntry = true) {\n    const link = this.getResolvedLink(filenameToSteps(filename));\n    if (link) {\n      return Stats_1.default.build(link.getNode(), bigint);\n    } else if (!throwIfNoEntry) {\n      return undefined;\n    } else {\n      throw (0, util_1.createError)(ENOENT, 'stat', filename);\n    }\n  }\n  statSync(path, options) {\n    const {\n      bigint = true,\n      throwIfNoEntry = true\n    } = (0, options_1.getStatOptions)(options);\n    return this.statBase((0, util_1.pathToFilename)(path), bigint, throwIfNoEntry);\n  }\n  stat(path, a, b) {\n    const [{\n      bigint = false,\n      throwIfNoEntry = true\n    }, callback] = (0, options_1.getStatOptsAndCb)(a, b);\n    this.wrapAsync(this.statBase, [(0, util_1.pathToFilename)(path), bigint, throwIfNoEntry], callback);\n  }\n  fstatBase(fd, bigint = false) {\n    const file = this.getFileByFd(fd);\n    if (!file) throw (0, util_1.createError)(EBADF, 'fstat');\n    return Stats_1.default.build(file.node, bigint);\n  }\n  fstatSync(fd, options) {\n    return this.fstatBase(fd, (0, options_1.getStatOptions)(options).bigint);\n  }\n  fstat(fd, a, b) {\n    const [opts, callback] = (0, options_1.getStatOptsAndCb)(a, b);\n    this.wrapAsync(this.fstatBase, [fd, opts.bigint], callback);\n  }\n  renameBase(oldPathFilename, newPathFilename) {\n    const link = this.getLink(filenameToSteps(oldPathFilename));\n    if (!link) throw (0, util_1.createError)(ENOENT, 'rename', oldPathFilename, newPathFilename);\n    // TODO: Check if it is directory, if non-empty, we cannot move it, right?\n    const newPathSteps = filenameToSteps(newPathFilename);\n    // Check directory exists for the new location.\n    const newPathDirLink = this.getLinkParent(newPathSteps);\n    if (!newPathDirLink) throw (0, util_1.createError)(ENOENT, 'rename', oldPathFilename, newPathFilename);\n    // TODO: Also treat cases with directories and symbolic links.\n    // TODO: See: http://man7.org/linux/man-pages/man2/rename.2.html\n    // Remove hard link from old folder.\n    const oldLinkParent = link.parent;\n    if (oldLinkParent) {\n      oldLinkParent.deleteChild(link);\n    }\n    // Rename should overwrite the new path, if that exists.\n    const name = newPathSteps[newPathSteps.length - 1];\n    link.name = name;\n    link.steps = [...newPathDirLink.steps, name];\n    newPathDirLink.setChild(link.getName(), link);\n  }\n  renameSync(oldPath, newPath) {\n    const oldPathFilename = (0, util_1.pathToFilename)(oldPath);\n    const newPathFilename = (0, util_1.pathToFilename)(newPath);\n    this.renameBase(oldPathFilename, newPathFilename);\n  }\n  rename(oldPath, newPath, callback) {\n    const oldPathFilename = (0, util_1.pathToFilename)(oldPath);\n    const newPathFilename = (0, util_1.pathToFilename)(newPath);\n    this.wrapAsync(this.renameBase, [oldPathFilename, newPathFilename], callback);\n  }\n  existsBase(filename) {\n    return !!this.statBase(filename);\n  }\n  existsSync(path) {\n    try {\n      return this.existsBase((0, util_1.pathToFilename)(path));\n    } catch (err) {\n      return false;\n    }\n  }\n  exists(path, callback) {\n    const filename = (0, util_1.pathToFilename)(path);\n    if (typeof callback !== 'function') throw Error(constants_2.ERRSTR.CB);\n    (0, setImmediate_1.default)(() => {\n      try {\n        callback(this.existsBase(filename));\n      } catch (err) {\n        callback(false);\n      }\n    });\n  }\n  accessBase(filename, mode) {\n    const link = this.getLinkOrThrow(filename, 'access');\n    // TODO: Verify permissions\n  }\n  accessSync(path, mode = F_OK) {\n    const filename = (0, util_1.pathToFilename)(path);\n    mode = mode | 0;\n    this.accessBase(filename, mode);\n  }\n  access(path, a, b) {\n    let mode = F_OK;\n    let callback;\n    if (typeof a !== 'function') {\n      mode = a | 0; // cast to number\n      callback = (0, util_1.validateCallback)(b);\n    } else {\n      callback = a;\n    }\n    const filename = (0, util_1.pathToFilename)(path);\n    this.wrapAsync(this.accessBase, [filename, mode], callback);\n  }\n  appendFileSync(id, data, options) {\n    const opts = (0, options_1.getAppendFileOpts)(options);\n    // force append behavior when using a supplied file descriptor\n    if (!opts.flag || (0, util_1.isFd)(id)) opts.flag = 'a';\n    this.writeFileSync(id, data, opts);\n  }\n  appendFile(id, data, a, b) {\n    const [opts, callback] = (0, options_1.getAppendFileOptsAndCb)(a, b);\n    // force append behavior when using a supplied file descriptor\n    if (!opts.flag || (0, util_1.isFd)(id)) opts.flag = 'a';\n    this.writeFile(id, data, opts, callback);\n  }\n  readdirBase(filename, options) {\n    const steps = filenameToSteps(filename);\n    const link = this.getResolvedLink(steps);\n    if (!link) throw (0, util_1.createError)(ENOENT, 'readdir', filename);\n    const node = link.getNode();\n    if (!node.isDirectory()) throw (0, util_1.createError)(ENOTDIR, 'scandir', filename);\n    if (options.withFileTypes) {\n      const list = [];\n      for (const name of link.children.keys()) {\n        const child = link.getChild(name);\n        if (!child || name === '.' || name === '..') {\n          continue;\n        }\n        list.push(Dirent_1.default.build(child, options.encoding));\n      }\n      if (!util_1.isWin && options.encoding !== 'buffer') list.sort((a, b) => {\n        if (a.name < b.name) return -1;\n        if (a.name > b.name) return 1;\n        return 0;\n      });\n      return list;\n    }\n    const list = [];\n    for (const name of link.children.keys()) {\n      if (name === '.' || name === '..') {\n        continue;\n      }\n      list.push((0, encoding_1.strToEncoding)(name, options.encoding));\n    }\n    if (!util_1.isWin && options.encoding !== 'buffer') list.sort();\n    return list;\n  }\n  readdirSync(path, options) {\n    const opts = (0, options_1.getReaddirOptions)(options);\n    const filename = (0, util_1.pathToFilename)(path);\n    return this.readdirBase(filename, opts);\n  }\n  readdir(path, a, b) {\n    const [options, callback] = (0, options_1.getReaddirOptsAndCb)(a, b);\n    const filename = (0, util_1.pathToFilename)(path);\n    this.wrapAsync(this.readdirBase, [filename, options], callback);\n  }\n  readlinkBase(filename, encoding) {\n    const link = this.getLinkOrThrow(filename, 'readlink');\n    const node = link.getNode();\n    if (!node.isSymlink()) throw (0, util_1.createError)(EINVAL, 'readlink', filename);\n    const str = sep + node.symlink.join(sep);\n    return (0, encoding_1.strToEncoding)(str, encoding);\n  }\n  readlinkSync(path, options) {\n    const opts = (0, options_1.getDefaultOpts)(options);\n    const filename = (0, util_1.pathToFilename)(path);\n    return this.readlinkBase(filename, opts.encoding);\n  }\n  readlink(path, a, b) {\n    const [opts, callback] = (0, options_1.getDefaultOptsAndCb)(a, b);\n    const filename = (0, util_1.pathToFilename)(path);\n    this.wrapAsync(this.readlinkBase, [filename, opts.encoding], callback);\n  }\n  fsyncBase(fd) {\n    this.getFileByFdOrThrow(fd, 'fsync');\n  }\n  fsyncSync(fd) {\n    this.fsyncBase(fd);\n  }\n  fsync(fd, callback) {\n    this.wrapAsync(this.fsyncBase, [fd], callback);\n  }\n  fdatasyncBase(fd) {\n    this.getFileByFdOrThrow(fd, 'fdatasync');\n  }\n  fdatasyncSync(fd) {\n    this.fdatasyncBase(fd);\n  }\n  fdatasync(fd, callback) {\n    this.wrapAsync(this.fdatasyncBase, [fd], callback);\n  }\n  ftruncateBase(fd, len) {\n    const file = this.getFileByFdOrThrow(fd, 'ftruncate');\n    file.truncate(len);\n  }\n  ftruncateSync(fd, len) {\n    this.ftruncateBase(fd, len);\n  }\n  ftruncate(fd, a, b) {\n    const len = typeof a === 'number' ? a : 0;\n    const callback = (0, util_1.validateCallback)(typeof a === 'number' ? b : a);\n    this.wrapAsync(this.ftruncateBase, [fd, len], callback);\n  }\n  truncateBase(path, len) {\n    const fd = this.openSync(path, 'r+');\n    try {\n      this.ftruncateSync(fd, len);\n    } finally {\n      this.closeSync(fd);\n    }\n  }\n  /**\n   * `id` should be a file descriptor or a path. `id` as file descriptor will\n   * not be supported soon.\n   */\n  truncateSync(id, len) {\n    if ((0, util_1.isFd)(id)) return this.ftruncateSync(id, len);\n    this.truncateBase(id, len);\n  }\n  truncate(id, a, b) {\n    const len = typeof a === 'number' ? a : 0;\n    const callback = (0, util_1.validateCallback)(typeof a === 'number' ? b : a);\n    if ((0, util_1.isFd)(id)) return this.ftruncate(id, len, callback);\n    this.wrapAsync(this.truncateBase, [id, len], callback);\n  }\n  futimesBase(fd, atime, mtime) {\n    const file = this.getFileByFdOrThrow(fd, 'futimes');\n    const node = file.node;\n    node.atime = new Date(atime * 1000);\n    node.mtime = new Date(mtime * 1000);\n  }\n  futimesSync(fd, atime, mtime) {\n    this.futimesBase(fd, toUnixTimestamp(atime), toUnixTimestamp(mtime));\n  }\n  futimes(fd, atime, mtime, callback) {\n    this.wrapAsync(this.futimesBase, [fd, toUnixTimestamp(atime), toUnixTimestamp(mtime)], callback);\n  }\n  utimesBase(filename, atime, mtime) {\n    const fd = this.openSync(filename, 'r');\n    try {\n      this.futimesBase(fd, atime, mtime);\n    } finally {\n      this.closeSync(fd);\n    }\n  }\n  utimesSync(path, atime, mtime) {\n    this.utimesBase((0, util_1.pathToFilename)(path), toUnixTimestamp(atime), toUnixTimestamp(mtime));\n  }\n  utimes(path, atime, mtime, callback) {\n    this.wrapAsync(this.utimesBase, [(0, util_1.pathToFilename)(path), toUnixTimestamp(atime), toUnixTimestamp(mtime)], callback);\n  }\n  mkdirBase(filename, modeNum) {\n    const steps = filenameToSteps(filename);\n    // This will throw if user tries to create root dir `fs.mkdirSync('/')`.\n    if (!steps.length) {\n      throw (0, util_1.createError)(EEXIST, 'mkdir', filename);\n    }\n    const dir = this.getLinkParentAsDirOrThrow(filename, 'mkdir');\n    // Check path already exists.\n    const name = steps[steps.length - 1];\n    if (dir.getChild(name)) throw (0, util_1.createError)(EEXIST, 'mkdir', filename);\n    dir.createChild(name, this.createNode(true, modeNum));\n  }\n  /**\n   * Creates directory tree recursively.\n   * @param filename\n   * @param modeNum\n   */\n  mkdirpBase(filename, modeNum) {\n    const fullPath = resolve(filename);\n    const fullPathSansSlash = fullPath.substring(1);\n    const steps = !fullPathSansSlash ? [] : fullPathSansSlash.split(sep);\n    let link = this.root;\n    let created = false;\n    for (let i = 0; i < steps.length; i++) {\n      const step = steps[i];\n      if (!link.getNode().isDirectory()) throw (0, util_1.createError)(ENOTDIR, 'mkdir', link.getPath());\n      const child = link.getChild(step);\n      if (child) {\n        if (child.getNode().isDirectory()) link = child;else throw (0, util_1.createError)(ENOTDIR, 'mkdir', child.getPath());\n      } else {\n        link = link.createChild(step, this.createNode(true, modeNum));\n        created = true;\n      }\n    }\n    return created ? fullPath : undefined;\n  }\n  mkdirSync(path, options) {\n    const opts = (0, options_1.getMkdirOptions)(options);\n    const modeNum = (0, util_1.modeToNumber)(opts.mode, 0o777);\n    const filename = (0, util_1.pathToFilename)(path);\n    if (opts.recursive) return this.mkdirpBase(filename, modeNum);\n    this.mkdirBase(filename, modeNum);\n  }\n  mkdir(path, a, b) {\n    const opts = (0, options_1.getMkdirOptions)(a);\n    const callback = (0, util_1.validateCallback)(typeof a === 'function' ? a : b);\n    const modeNum = (0, util_1.modeToNumber)(opts.mode, 0o777);\n    const filename = (0, util_1.pathToFilename)(path);\n    if (opts.recursive) this.wrapAsync(this.mkdirpBase, [filename, modeNum], callback);else this.wrapAsync(this.mkdirBase, [filename, modeNum], callback);\n  }\n  mkdtempBase(prefix, encoding, retry = 5) {\n    const filename = prefix + (0, util_1.genRndStr6)();\n    try {\n      this.mkdirBase(filename, 511 /* MODE.DIR */);\n      return (0, encoding_1.strToEncoding)(filename, encoding);\n    } catch (err) {\n      if (err.code === EEXIST) {\n        if (retry > 1) return this.mkdtempBase(prefix, encoding, retry - 1);else throw Error('Could not create temp dir.');\n      } else throw err;\n    }\n  }\n  mkdtempSync(prefix, options) {\n    const {\n      encoding\n    } = (0, options_1.getDefaultOpts)(options);\n    if (!prefix || typeof prefix !== 'string') throw new TypeError('filename prefix is required');\n    (0, util_1.nullCheck)(prefix);\n    return this.mkdtempBase(prefix, encoding);\n  }\n  mkdtemp(prefix, a, b) {\n    const [{\n      encoding\n    }, callback] = (0, options_1.getDefaultOptsAndCb)(a, b);\n    if (!prefix || typeof prefix !== 'string') throw new TypeError('filename prefix is required');\n    if (!(0, util_1.nullCheck)(prefix)) return;\n    this.wrapAsync(this.mkdtempBase, [prefix, encoding], callback);\n  }\n  rmdirBase(filename, options) {\n    const opts = (0, options_1.getRmdirOptions)(options);\n    const link = this.getLinkAsDirOrThrow(filename, 'rmdir');\n    // Check directory is empty.\n    if (link.length && !opts.recursive) throw (0, util_1.createError)(ENOTEMPTY, 'rmdir', filename);\n    this.deleteLink(link);\n  }\n  rmdirSync(path, options) {\n    this.rmdirBase((0, util_1.pathToFilename)(path), options);\n  }\n  rmdir(path, a, b) {\n    const opts = (0, options_1.getRmdirOptions)(a);\n    const callback = (0, util_1.validateCallback)(typeof a === 'function' ? a : b);\n    this.wrapAsync(this.rmdirBase, [(0, util_1.pathToFilename)(path), opts], callback);\n  }\n  rmBase(filename, options = {}) {\n    const link = this.getResolvedLink(filename);\n    if (!link) {\n      // \"stat\" is used to match Node's native error message.\n      if (!options.force) throw (0, util_1.createError)(ENOENT, 'stat', filename);\n      return;\n    }\n    if (link.getNode().isDirectory()) {\n      if (!options.recursive) {\n        throw (0, util_1.createError)(ERR_FS_EISDIR, 'rm', filename);\n      }\n    }\n    this.deleteLink(link);\n  }\n  rmSync(path, options) {\n    this.rmBase((0, util_1.pathToFilename)(path), options);\n  }\n  rm(path, a, b) {\n    const [opts, callback] = (0, options_1.getRmOptsAndCb)(a, b);\n    this.wrapAsync(this.rmBase, [(0, util_1.pathToFilename)(path), opts], callback);\n  }\n  fchmodBase(fd, modeNum) {\n    const file = this.getFileByFdOrThrow(fd, 'fchmod');\n    file.chmod(modeNum);\n  }\n  fchmodSync(fd, mode) {\n    this.fchmodBase(fd, (0, util_1.modeToNumber)(mode));\n  }\n  fchmod(fd, mode, callback) {\n    this.wrapAsync(this.fchmodBase, [fd, (0, util_1.modeToNumber)(mode)], callback);\n  }\n  chmodBase(filename, modeNum) {\n    const fd = this.openSync(filename, 'r');\n    try {\n      this.fchmodBase(fd, modeNum);\n    } finally {\n      this.closeSync(fd);\n    }\n  }\n  chmodSync(path, mode) {\n    const modeNum = (0, util_1.modeToNumber)(mode);\n    const filename = (0, util_1.pathToFilename)(path);\n    this.chmodBase(filename, modeNum);\n  }\n  chmod(path, mode, callback) {\n    const modeNum = (0, util_1.modeToNumber)(mode);\n    const filename = (0, util_1.pathToFilename)(path);\n    this.wrapAsync(this.chmodBase, [filename, modeNum], callback);\n  }\n  lchmodBase(filename, modeNum) {\n    const fd = this.openBase(filename, O_RDWR, 0, false);\n    try {\n      this.fchmodBase(fd, modeNum);\n    } finally {\n      this.closeSync(fd);\n    }\n  }\n  lchmodSync(path, mode) {\n    const modeNum = (0, util_1.modeToNumber)(mode);\n    const filename = (0, util_1.pathToFilename)(path);\n    this.lchmodBase(filename, modeNum);\n  }\n  lchmod(path, mode, callback) {\n    const modeNum = (0, util_1.modeToNumber)(mode);\n    const filename = (0, util_1.pathToFilename)(path);\n    this.wrapAsync(this.lchmodBase, [filename, modeNum], callback);\n  }\n  fchownBase(fd, uid, gid) {\n    this.getFileByFdOrThrow(fd, 'fchown').chown(uid, gid);\n  }\n  fchownSync(fd, uid, gid) {\n    validateUid(uid);\n    validateGid(gid);\n    this.fchownBase(fd, uid, gid);\n  }\n  fchown(fd, uid, gid, callback) {\n    validateUid(uid);\n    validateGid(gid);\n    this.wrapAsync(this.fchownBase, [fd, uid, gid], callback);\n  }\n  chownBase(filename, uid, gid) {\n    const link = this.getResolvedLinkOrThrow(filename, 'chown');\n    const node = link.getNode();\n    node.chown(uid, gid);\n    // if(node.isFile() || node.isSymlink()) {\n    //\n    // } else if(node.isDirectory()) {\n    //\n    // } else {\n    // TODO: What do we do here?\n    // }\n  }\n  chownSync(path, uid, gid) {\n    validateUid(uid);\n    validateGid(gid);\n    this.chownBase((0, util_1.pathToFilename)(path), uid, gid);\n  }\n  chown(path, uid, gid, callback) {\n    validateUid(uid);\n    validateGid(gid);\n    this.wrapAsync(this.chownBase, [(0, util_1.pathToFilename)(path), uid, gid], callback);\n  }\n  lchownBase(filename, uid, gid) {\n    this.getLinkOrThrow(filename, 'lchown').getNode().chown(uid, gid);\n  }\n  lchownSync(path, uid, gid) {\n    validateUid(uid);\n    validateGid(gid);\n    this.lchownBase((0, util_1.pathToFilename)(path), uid, gid);\n  }\n  lchown(path, uid, gid, callback) {\n    validateUid(uid);\n    validateGid(gid);\n    this.wrapAsync(this.lchownBase, [(0, util_1.pathToFilename)(path), uid, gid], callback);\n  }\n  watchFile(path, a, b) {\n    const filename = (0, util_1.pathToFilename)(path);\n    let options = a;\n    let listener = b;\n    if (typeof options === 'function') {\n      listener = a;\n      options = null;\n    }\n    if (typeof listener !== 'function') {\n      throw Error('\"watchFile()\" requires a listener function');\n    }\n    let interval = 5007;\n    let persistent = true;\n    if (options && typeof options === 'object') {\n      if (typeof options.interval === 'number') interval = options.interval;\n      if (typeof options.persistent === 'boolean') persistent = options.persistent;\n    }\n    let watcher = this.statWatchers[filename];\n    if (!watcher) {\n      watcher = new this.StatWatcher();\n      watcher.start(filename, persistent, interval);\n      this.statWatchers[filename] = watcher;\n    }\n    watcher.addListener('change', listener);\n    return watcher;\n  }\n  unwatchFile(path, listener) {\n    const filename = (0, util_1.pathToFilename)(path);\n    const watcher = this.statWatchers[filename];\n    if (!watcher) return;\n    if (typeof listener === 'function') {\n      watcher.removeListener('change', listener);\n    } else {\n      watcher.removeAllListeners('change');\n    }\n    if (watcher.listenerCount('change') === 0) {\n      watcher.stop();\n      delete this.statWatchers[filename];\n    }\n  }\n  createReadStream(path, options) {\n    return new this.ReadStream(path, options);\n  }\n  createWriteStream(path, options) {\n    return new this.WriteStream(path, options);\n  }\n  // watch(path: PathLike): FSWatcher;\n  // watch(path: PathLike, options?: IWatchOptions | string): FSWatcher;\n  watch(path, options, listener) {\n    const filename = (0, util_1.pathToFilename)(path);\n    let givenOptions = options;\n    if (typeof options === 'function') {\n      listener = options;\n      givenOptions = null;\n    }\n    // tslint:disable-next-line prefer-const\n    let {\n      persistent,\n      recursive,\n      encoding\n    } = (0, options_1.getDefaultOpts)(givenOptions);\n    if (persistent === undefined) persistent = true;\n    if (recursive === undefined) recursive = false;\n    const watcher = new this.FSWatcher();\n    watcher.start(filename, persistent, recursive, encoding);\n    if (listener) {\n      watcher.addListener('change', listener);\n    }\n    return watcher;\n  }\n}\nexports.Volume = Volume;\n/**\n * Global file descriptor counter. UNIX file descriptors start from 0 and go sequentially\n * up, so here, in order not to conflict with them, we choose some big number and descrease\n * the file descriptor of every new opened file.\n * @type {number}\n * @todo This should not be static, right?\n */\nVolume.fd = 0x7fffffff;\nfunction emitStop(self) {\n  self.emit('stop');\n}\nclass StatWatcher extends events_1.EventEmitter {\n  constructor(vol) {\n    super();\n    this.onInterval = () => {\n      try {\n        const stats = this.vol.statSync(this.filename);\n        if (this.hasChanged(stats)) {\n          this.emit('change', stats, this.prev);\n          this.prev = stats;\n        }\n      } finally {\n        this.loop();\n      }\n    };\n    this.vol = vol;\n  }\n  loop() {\n    this.timeoutRef = this.setTimeout(this.onInterval, this.interval);\n  }\n  hasChanged(stats) {\n    // if(!this.prev) return false;\n    if (stats.mtimeMs > this.prev.mtimeMs) return true;\n    if (stats.nlink !== this.prev.nlink) return true;\n    return false;\n  }\n  start(path, persistent = true, interval = 5007) {\n    this.filename = (0, util_1.pathToFilename)(path);\n    this.setTimeout = persistent ? setTimeout.bind(typeof globalThis !== 'undefined' ? globalThis : global) : setTimeoutUnref_1.default;\n    this.interval = interval;\n    this.prev = this.vol.statSync(this.filename);\n    this.loop();\n  }\n  stop() {\n    clearTimeout(this.timeoutRef);\n    (0, queueMicrotask_1.default)(() => {\n      emitStop.call(this, this);\n    });\n  }\n}\nexports.StatWatcher = StatWatcher;\n/* tslint:disable no-var-keyword prefer-const */\n// ---------------------------------------- ReadStream\nvar pool;\nfunction allocNewPool(poolSize) {\n  pool = (0, buffer_1.bufferAllocUnsafe)(poolSize);\n  pool.used = 0;\n}\nutil.inherits(FsReadStream, stream_1.Readable);\nexports.ReadStream = FsReadStream;\nfunction FsReadStream(vol, path, options) {\n  if (!(this instanceof FsReadStream)) return new FsReadStream(vol, path, options);\n  this._vol = vol;\n  // a little bit bigger buffer and water marks by default\n  options = Object.assign({}, (0, options_1.getOptions)(options, {}));\n  if (options.highWaterMark === undefined) options.highWaterMark = 64 * 1024;\n  stream_1.Readable.call(this, options);\n  this.path = (0, util_1.pathToFilename)(path);\n  this.fd = options.fd === undefined ? null : options.fd;\n  this.flags = options.flags === undefined ? 'r' : options.flags;\n  this.mode = options.mode === undefined ? 0o666 : options.mode;\n  this.start = options.start;\n  this.end = options.end;\n  this.autoClose = options.autoClose === undefined ? true : options.autoClose;\n  this.pos = undefined;\n  this.bytesRead = 0;\n  if (this.start !== undefined) {\n    if (typeof this.start !== 'number') {\n      throw new TypeError('\"start\" option must be a Number');\n    }\n    if (this.end === undefined) {\n      this.end = Infinity;\n    } else if (typeof this.end !== 'number') {\n      throw new TypeError('\"end\" option must be a Number');\n    }\n    if (this.start > this.end) {\n      throw new Error('\"start\" option must be <= \"end\" option');\n    }\n    this.pos = this.start;\n  }\n  if (typeof this.fd !== 'number') this.open();\n  this.on('end', function () {\n    if (this.autoClose) {\n      if (this.destroy) this.destroy();\n    }\n  });\n}\nFsReadStream.prototype.open = function () {\n  var self = this; // tslint:disable-line no-this-assignment\n  this._vol.open(this.path, this.flags, this.mode, (er, fd) => {\n    if (er) {\n      if (self.autoClose) {\n        if (self.destroy) self.destroy();\n      }\n      self.emit('error', er);\n      return;\n    }\n    self.fd = fd;\n    self.emit('open', fd);\n    // start the flow of data.\n    self.read();\n  });\n};\nFsReadStream.prototype._read = function (n) {\n  if (typeof this.fd !== 'number') {\n    return this.once('open', function () {\n      this._read(n);\n    });\n  }\n  if (this.destroyed) return;\n  if (!pool || pool.length - pool.used < kMinPoolSpace) {\n    // discard the old pool.\n    allocNewPool(this._readableState.highWaterMark);\n  }\n  // Grab another reference to the pool in the case that while we're\n  // in the thread pool another read() finishes up the pool, and\n  // allocates a new one.\n  var thisPool = pool;\n  var toRead = Math.min(pool.length - pool.used, n);\n  var start = pool.used;\n  if (this.pos !== undefined) toRead = Math.min(this.end - this.pos + 1, toRead);\n  // already read everything we were supposed to read!\n  // treat as EOF.\n  if (toRead <= 0) return this.push(null);\n  // the actual read.\n  var self = this; // tslint:disable-line no-this-assignment\n  this._vol.read(this.fd, pool, pool.used, toRead, this.pos, onread);\n  // move the pool positions, and internal position for reading.\n  if (this.pos !== undefined) this.pos += toRead;\n  pool.used += toRead;\n  function onread(er, bytesRead) {\n    if (er) {\n      if (self.autoClose && self.destroy) {\n        self.destroy();\n      }\n      self.emit('error', er);\n    } else {\n      var b = null;\n      if (bytesRead > 0) {\n        self.bytesRead += bytesRead;\n        b = thisPool.slice(start, start + bytesRead);\n      }\n      self.push(b);\n    }\n  }\n};\nFsReadStream.prototype._destroy = function (err, cb) {\n  this.close(err2 => {\n    cb(err || err2);\n  });\n};\nFsReadStream.prototype.close = function (cb) {\n  var _a;\n  if (cb) this.once('close', cb);\n  if (this.closed || typeof this.fd !== 'number') {\n    if (typeof this.fd !== 'number') {\n      this.once('open', closeOnOpen);\n      return;\n    }\n    return (0, queueMicrotask_1.default)(() => this.emit('close'));\n  }\n  // Since Node 18, there is only a getter for '.closed'.\n  // The first branch mimics other setters from Readable.\n  // See https://github.com/nodejs/node/blob/v18.0.0/lib/internal/streams/readable.js#L1243\n  if (typeof ((_a = this._readableState) === null || _a === void 0 ? void 0 : _a.closed) === 'boolean') {\n    this._readableState.closed = true;\n  } else {\n    this.closed = true;\n  }\n  this._vol.close(this.fd, er => {\n    if (er) this.emit('error', er);else this.emit('close');\n  });\n  this.fd = null;\n};\n// needed because as it will be called with arguments\n// that does not match this.close() signature\nfunction closeOnOpen(fd) {\n  this.close();\n}\nutil.inherits(FsWriteStream, stream_1.Writable);\nexports.WriteStream = FsWriteStream;\nfunction FsWriteStream(vol, path, options) {\n  if (!(this instanceof FsWriteStream)) return new FsWriteStream(vol, path, options);\n  this._vol = vol;\n  options = Object.assign({}, (0, options_1.getOptions)(options, {}));\n  stream_1.Writable.call(this, options);\n  this.path = (0, util_1.pathToFilename)(path);\n  this.fd = options.fd === undefined ? null : options.fd;\n  this.flags = options.flags === undefined ? 'w' : options.flags;\n  this.mode = options.mode === undefined ? 0o666 : options.mode;\n  this.start = options.start;\n  this.autoClose = options.autoClose === undefined ? true : !!options.autoClose;\n  this.pos = undefined;\n  this.bytesWritten = 0;\n  this.pending = true;\n  if (this.start !== undefined) {\n    if (typeof this.start !== 'number') {\n      throw new TypeError('\"start\" option must be a Number');\n    }\n    if (this.start < 0) {\n      throw new Error('\"start\" must be >= zero');\n    }\n    this.pos = this.start;\n  }\n  if (options.encoding) this.setDefaultEncoding(options.encoding);\n  if (typeof this.fd !== 'number') this.open();\n  // dispose on finish.\n  this.once('finish', function () {\n    if (this.autoClose) {\n      this.close();\n    }\n  });\n}\nFsWriteStream.prototype.open = function () {\n  this._vol.open(this.path, this.flags, this.mode, function (er, fd) {\n    if (er) {\n      if (this.autoClose && this.destroy) {\n        this.destroy();\n      }\n      this.emit('error', er);\n      return;\n    }\n    this.fd = fd;\n    this.pending = false;\n    this.emit('open', fd);\n  }.bind(this));\n};\nFsWriteStream.prototype._write = function (data, encoding, cb) {\n  if (!(data instanceof buffer_1.Buffer || data instanceof Uint8Array)) return this.emit('error', new Error('Invalid data'));\n  if (typeof this.fd !== 'number') {\n    return this.once('open', function () {\n      this._write(data, encoding, cb);\n    });\n  }\n  var self = this; // tslint:disable-line no-this-assignment\n  this._vol.write(this.fd, data, 0, data.length, this.pos, (er, bytes) => {\n    if (er) {\n      if (self.autoClose && self.destroy) {\n        self.destroy();\n      }\n      return cb(er);\n    }\n    self.bytesWritten += bytes;\n    cb();\n  });\n  if (this.pos !== undefined) this.pos += data.length;\n};\nFsWriteStream.prototype._writev = function (data, cb) {\n  if (typeof this.fd !== 'number') {\n    return this.once('open', function () {\n      this._writev(data, cb);\n    });\n  }\n  const self = this; // tslint:disable-line no-this-assignment\n  const len = data.length;\n  const chunks = new Array(len);\n  var size = 0;\n  for (var i = 0; i < len; i++) {\n    var chunk = data[i].chunk;\n    chunks[i] = chunk;\n    size += chunk.length;\n  }\n  const buf = buffer_1.Buffer.concat(chunks);\n  this._vol.write(this.fd, buf, 0, buf.length, this.pos, (er, bytes) => {\n    if (er) {\n      if (self.destroy) self.destroy();\n      return cb(er);\n    }\n    self.bytesWritten += bytes;\n    cb();\n  });\n  if (this.pos !== undefined) this.pos += size;\n};\nFsWriteStream.prototype.close = function (cb) {\n  var _a;\n  if (cb) this.once('close', cb);\n  if (this.closed || typeof this.fd !== 'number') {\n    if (typeof this.fd !== 'number') {\n      this.once('open', closeOnOpen);\n      return;\n    }\n    return (0, queueMicrotask_1.default)(() => this.emit('close'));\n  }\n  // Since Node 18, there is only a getter for '.closed'.\n  // The first branch mimics other setters from Writable.\n  // See https://github.com/nodejs/node/blob/v18.0.0/lib/internal/streams/writable.js#L766\n  if (typeof ((_a = this._writableState) === null || _a === void 0 ? void 0 : _a.closed) === 'boolean') {\n    this._writableState.closed = true;\n  } else {\n    this.closed = true;\n  }\n  this._vol.close(this.fd, er => {\n    if (er) this.emit('error', er);else this.emit('close');\n  });\n  this.fd = null;\n};\nFsWriteStream.prototype._destroy = FsReadStream.prototype._destroy;\n// There is no shutdown() for files.\nFsWriteStream.prototype.destroySoon = FsWriteStream.prototype.end;\n// ---------------------------------------- FSWatcher\nclass FSWatcher extends events_1.EventEmitter {\n  constructor(vol) {\n    super();\n    this._filename = '';\n    this._filenameEncoded = '';\n    // _persistent: boolean = true;\n    this._recursive = false;\n    this._encoding = encoding_1.ENCODING_UTF8;\n    // inode -> removers\n    this._listenerRemovers = new Map();\n    this._onParentChild = link => {\n      if (link.getName() === this._getName()) {\n        this._emit('rename');\n      }\n    };\n    this._emit = type => {\n      this.emit('change', type, this._filenameEncoded);\n    };\n    this._persist = () => {\n      this._timer = setTimeout(this._persist, 1e6);\n    };\n    this._vol = vol;\n    // TODO: Emit \"error\" messages when watching.\n    // this._handle.onchange = function(status, eventType, filename) {\n    //     if (status < 0) {\n    //         self._handle.close();\n    //         const error = !filename ?\n    //             errnoException(status, 'Error watching file for changes:') :\n    //             errnoException(status, `Error watching file ${filename} for changes:`);\n    //         error.filename = filename;\n    //         self.emit('error', error);\n    //     } else {\n    //         self.emit('change', eventType, filename);\n    //     }\n    // };\n  }\n  _getName() {\n    return this._steps[this._steps.length - 1];\n  }\n  start(path, persistent = true, recursive = false, encoding = encoding_1.ENCODING_UTF8) {\n    this._filename = (0, util_1.pathToFilename)(path);\n    this._steps = filenameToSteps(this._filename);\n    this._filenameEncoded = (0, encoding_1.strToEncoding)(this._filename);\n    // this._persistent = persistent;\n    this._recursive = recursive;\n    this._encoding = encoding;\n    try {\n      this._link = this._vol.getLinkOrThrow(this._filename, 'FSWatcher');\n    } catch (err) {\n      const error = new Error(`watch ${this._filename} ${err.code}`);\n      error.code = err.code;\n      error.errno = err.code;\n      throw error;\n    }\n    const watchLinkNodeChanged = link => {\n      var _a;\n      const filepath = link.getPath();\n      const node = link.getNode();\n      const onNodeChange = () => {\n        let filename = relative(this._filename, filepath);\n        if (!filename) {\n          filename = this._getName();\n        }\n        return this.emit('change', 'change', filename);\n      };\n      node.on('change', onNodeChange);\n      const removers = (_a = this._listenerRemovers.get(node.ino)) !== null && _a !== void 0 ? _a : [];\n      removers.push(() => node.removeListener('change', onNodeChange));\n      this._listenerRemovers.set(node.ino, removers);\n    };\n    const watchLinkChildrenChanged = link => {\n      var _a;\n      const node = link.getNode();\n      // when a new link added\n      const onLinkChildAdd = l => {\n        this.emit('change', 'rename', relative(this._filename, l.getPath()));\n        setTimeout(() => {\n          // 1. watch changes of the new link-node\n          watchLinkNodeChanged(l);\n          // 2. watch changes of the new link-node's children\n          watchLinkChildrenChanged(l);\n        });\n      };\n      // when a new link deleted\n      const onLinkChildDelete = l => {\n        // remove the listeners of the children nodes\n        const removeLinkNodeListeners = curLink => {\n          const ino = curLink.getNode().ino;\n          const removers = this._listenerRemovers.get(ino);\n          if (removers) {\n            removers.forEach(r => r());\n            this._listenerRemovers.delete(ino);\n          }\n          for (const [name, childLink] of curLink.children.entries()) {\n            if (childLink && name !== '.' && name !== '..') {\n              removeLinkNodeListeners(childLink);\n            }\n          }\n        };\n        removeLinkNodeListeners(l);\n        this.emit('change', 'rename', relative(this._filename, l.getPath()));\n      };\n      // children nodes changed\n      for (const [name, childLink] of link.children.entries()) {\n        if (childLink && name !== '.' && name !== '..') {\n          watchLinkNodeChanged(childLink);\n        }\n      }\n      // link children add/remove\n      link.on('child:add', onLinkChildAdd);\n      link.on('child:delete', onLinkChildDelete);\n      const removers = (_a = this._listenerRemovers.get(node.ino)) !== null && _a !== void 0 ? _a : [];\n      removers.push(() => {\n        link.removeListener('child:add', onLinkChildAdd);\n        link.removeListener('child:delete', onLinkChildDelete);\n      });\n      if (recursive) {\n        for (const [name, childLink] of link.children.entries()) {\n          if (childLink && name !== '.' && name !== '..') {\n            watchLinkChildrenChanged(childLink);\n          }\n        }\n      }\n    };\n    watchLinkNodeChanged(this._link);\n    watchLinkChildrenChanged(this._link);\n    const parent = this._link.parent;\n    if (parent) {\n      // parent.on('child:add', this._onParentChild);\n      parent.setMaxListeners(parent.getMaxListeners() + 1);\n      parent.on('child:delete', this._onParentChild);\n    }\n    if (persistent) this._persist();\n  }\n  close() {\n    clearTimeout(this._timer);\n    this._listenerRemovers.forEach(removers => {\n      removers.forEach(r => r());\n    });\n    this._listenerRemovers.clear();\n    const parent = this._link.parent;\n    if (parent) {\n      // parent.removeListener('child:add', this._onParentChild);\n      parent.removeListener('child:delete', this._onParentChild);\n    }\n  }\n}\nexports.FSWatcher = FSWatcher;","map":{"version":3,"names":["pathModule","require","node_1","Stats_1","Dirent_1","buffer_1","setImmediate_1","queueMicrotask_1","process_1","setTimeoutUnref_1","stream_1","constants_1","events_1","encoding_1","FileHandle_1","util","FsPromises_1","print_1","constants_2","options_1","util_1","resolveCrossPlatform","resolve","O_RDONLY","O_WRONLY","O_RDWR","O_CREAT","O_EXCL","O_TRUNC","O_APPEND","O_DIRECTORY","O_SYMLINK","F_OK","COPYFILE_EXCL","COPYFILE_FICLONE_FORCE","constants","sep","relative","join","dirname","posix","kMinPoolSpace","EPERM","ENOENT","EBADF","EINVAL","EEXIST","ENOTDIR","EMFILE","EACCES","EISDIR","ENOTEMPTY","ENOSYS","ERR_FS_EISDIR","ERR_OUT_OF_RANGE","filename","base","default","cwd","isWin","_resolve","unixify","filenameToSteps","fullPath","fullPathSansSlash","substring","split","exports","pathToSteps","path","pathToFilename","dataToStr","data","encoding","ENCODING_UTF8","Buffer","isBuffer","toString","Uint8Array","bufferFrom","String","toUnixTimestamp","time","Date","getTime","isFinite","now","Error","validateUid","uid","TypeError","ERRSTR","UID","validateGid","gid","GID","flattenJSON","nestedJSON","flatJSON","flatten","pathPrefix","node","contentOrNode","joinedPath","Object","keys","length","notImplemented","Volume","fromJSON","json","vol","fromNestedJSON","promises","promisesApi","constructor","props","ino","inodes","releasedInos","fds","releasedFds","maxFiles","openFiles","FsPromises","FileHandle","statWatchers","cpSync","lutimesSync","statfsSync","opendirSync","cp","lutimes","statfs","openAsBlob","opendir","assign","Node","Link","File","root","createLink","setNode","createNode","self","StatWatcher","_ReadStream","FsReadStream","ReadStream","args","_WriteStream","FsWriteStream","WriteStream","FSWatcher","setChild","getNode","nlink","parent","name","isDirectory","perm","createChild","deleteLink","link","deleteChild","newInoNumber","releasedFd","pop","newFdNumber","fd","setIsDirectory","deleteNode","del","push","getLink","steps","walk","getLinkOrThrow","funcName","createError","getResolvedLink","filenameOrSteps","i","step","getChild","isSymlink","symlink","concat","slice","getResolvedLinkOrThrow","resolveSymlinks","getLinkAsDirOrThrow","getLinkParent","getLinkParentAsDirOrThrow","Array","getFileByFd","getFileByFdOrThrow","isFd","FD","file","wrapAsync","method","callback","validateCallback","result","apply","err","_toJSON","asBuffer","isEmpty","children","isFile","Map","getName","child","getPath","getBuffer","getString","dirPath","toJSON","paths","isRelative","links","isArray","dir","mkdirpBase","writeFileSync","toTree","opts","separator","toTreeSync","reset","mountSync","mountpoint","openLink","flagsNum","realLink","canRead","truncate","openFile","modeNum","dirLink","openBase","openSync","flags","mode","modeToNumber","fileName","flagsToNumber","open","a","b","closeFile","closeSync","validateFd","close","openFileOrGetById","id","readBase","buffer","offset","position","byteLength","undefined","RangeError","read","Number","readSync","bytes","readvBase","buffers","p","bytesRead","readv","readvSync","readFileBase","isUserFd","userOwnsFd","bufferToEncoding","readFileSync","options","getReadFileOptions","flag","readFile","optsAndCbGenerator","writeBase","buf","write","writeSync","c","d","getWriteSyncArgs","e","asStr","cb","getWriteArgs","writevBase","bytesWritten","nodeBuf","from","byteOffset","writev","writevSync","writeFileBase","written","getWriteFileOptions","dataToBuffer","writeFile","writeFileDefaults","linkBase","filename1","filename2","steps1","link1","steps2","dir2","copyFileBase","src","dest","existsSync","FLAGS","w","copyFileSync","srcFilename","destFilename","copyFile","linkSync","existingPath","newPath","existingPathFilename","newPathFilename","unlinkBase","unlinkSync","unlink","symlinkBase","targetFilename","pathFilename","pathSteps","makeSymlink","symlinkSync","target","type","realpathBase","strToEncoding","realpathSync","getRealpathOptions","realpath","getRealpathOptsAndCb","lstatBase","bigint","throwIfNoEntry","build","lstatSync","getStatOptions","lstat","getStatOptsAndCb","statBase","statSync","stat","fstatBase","fstatSync","fstat","renameBase","oldPathFilename","newPathSteps","newPathDirLink","oldLinkParent","renameSync","oldPath","rename","existsBase","exists","CB","accessBase","accessSync","access","appendFileSync","getAppendFileOpts","appendFile","getAppendFileOptsAndCb","readdirBase","withFileTypes","list","sort","readdirSync","getReaddirOptions","readdir","getReaddirOptsAndCb","readlinkBase","str","readlinkSync","getDefaultOpts","readlink","getDefaultOptsAndCb","fsyncBase","fsyncSync","fsync","fdatasyncBase","fdatasyncSync","fdatasync","ftruncateBase","len","ftruncateSync","ftruncate","truncateBase","truncateSync","futimesBase","atime","mtime","futimesSync","futimes","utimesBase","utimesSync","utimes","mkdirBase","created","mkdirSync","getMkdirOptions","recursive","mkdir","mkdtempBase","prefix","retry","genRndStr6","code","mkdtempSync","nullCheck","mkdtemp","rmdirBase","getRmdirOptions","rmdirSync","rmdir","rmBase","force","rmSync","rm","getRmOptsAndCb","fchmodBase","chmod","fchmodSync","fchmod","chmodBase","chmodSync","lchmodBase","lchmodSync","lchmod","fchownBase","chown","fchownSync","fchown","chownBase","chownSync","lchownBase","lchownSync","lchown","watchFile","listener","interval","persistent","watcher","start","addListener","unwatchFile","removeListener","removeAllListeners","listenerCount","stop","createReadStream","createWriteStream","watch","givenOptions","emitStop","emit","EventEmitter","onInterval","stats","hasChanged","prev","loop","timeoutRef","setTimeout","mtimeMs","bind","globalThis","global","clearTimeout","call","pool","allocNewPool","poolSize","bufferAllocUnsafe","used","inherits","Readable","_vol","getOptions","highWaterMark","end","autoClose","pos","Infinity","on","destroy","prototype","er","_read","n","once","destroyed","_readableState","thisPool","toRead","Math","min","onread","_destroy","err2","closed","closeOnOpen","_a","Writable","pending","setDefaultEncoding","_write","_writev","chunks","size","chunk","_writableState","destroySoon","_filename","_filenameEncoded","_recursive","_encoding","_listenerRemovers","_onParentChild","_getName","_emit","_persist","_timer","_steps","_link","error","errno","watchLinkNodeChanged","filepath","onNodeChange","removers","get","set","watchLinkChildrenChanged","onLinkChildAdd","l","onLinkChildDelete","removeLinkNodeListeners","curLink","forEach","r","delete","childLink","entries","setMaxListeners","getMaxListeners","clear"],"sources":["../src/volume.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}