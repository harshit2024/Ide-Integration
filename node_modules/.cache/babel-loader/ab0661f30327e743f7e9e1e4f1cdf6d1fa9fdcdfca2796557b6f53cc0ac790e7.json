{"ast":null,"code":"import process from 'node:process';\nimport { promisify } from 'node:util';\nimport { execFile, execFileSync } from 'node:child_process';\nconst execFileAsync = promisify(execFile);\nexport async function runAppleScript(script, {\n  humanReadableOutput = true\n} = {}) {\n  if (process.platform !== 'darwin') {\n    throw new Error('macOS only');\n  }\n  const outputArguments = humanReadableOutput ? [] : ['-ss'];\n  const {\n    stdout\n  } = await execFileAsync('osascript', ['-e', script, outputArguments]);\n  return stdout.trim();\n}\nexport function runAppleScriptSync(script, {\n  humanReadableOutput = true\n} = {}) {\n  if (process.platform !== 'darwin') {\n    throw new Error('macOS only');\n  }\n  const outputArguments = humanReadableOutput ? [] : ['-ss'];\n  const stdout = execFileSync('osascript', ['-e', script, ...outputArguments], {\n    encoding: 'utf8',\n    stdio: ['ignore', 'pipe', 'ignore'],\n    timeout: 500\n  });\n  return stdout.trim();\n}","map":{"version":3,"names":["process","promisify","execFile","execFileSync","execFileAsync","runAppleScript","script","humanReadableOutput","platform","Error","outputArguments","stdout","trim","runAppleScriptSync","encoding","stdio","timeout"],"sources":["C:/Users/HarshitSrivastava/Desktop/Practice/React/Project2/my-app/node_modules/run-applescript/index.js"],"sourcesContent":["import process from 'node:process';\nimport {promisify} from 'node:util';\nimport {execFile, execFileSync} from 'node:child_process';\n\nconst execFileAsync = promisify(execFile);\n\nexport async function runAppleScript(script, {humanReadableOutput = true} = {}) {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst outputArguments = humanReadableOutput ? [] : ['-ss'];\n\n\tconst {stdout} = await execFileAsync('osascript', ['-e', script, outputArguments]);\n\treturn stdout.trim();\n}\n\nexport function runAppleScriptSync(script, {humanReadableOutput = true} = {}) {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst outputArguments = humanReadableOutput ? [] : ['-ss'];\n\n\tconst stdout = execFileSync('osascript', ['-e', script, ...outputArguments], {\n\t\tencoding: 'utf8',\n\t\tstdio: ['ignore', 'pipe', 'ignore'],\n\t\ttimeout: 500,\n\t});\n\n\treturn stdout.trim();\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,SAAQC,SAAS,QAAO,WAAW;AACnC,SAAQC,QAAQ,EAAEC,YAAY,QAAO,oBAAoB;AAEzD,MAAMC,aAAa,GAAGH,SAAS,CAACC,QAAQ,CAAC;AAEzC,OAAO,eAAeG,cAAcA,CAACC,MAAM,EAAE;EAACC,mBAAmB,GAAG;AAAI,CAAC,GAAG,CAAC,CAAC,EAAE;EAC/E,IAAIP,OAAO,CAACQ,QAAQ,KAAK,QAAQ,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,YAAY,CAAC;EAC9B;EAEA,MAAMC,eAAe,GAAGH,mBAAmB,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;EAE1D,MAAM;IAACI;EAAM,CAAC,GAAG,MAAMP,aAAa,CAAC,WAAW,EAAE,CAAC,IAAI,EAAEE,MAAM,EAAEI,eAAe,CAAC,CAAC;EAClF,OAAOC,MAAM,CAACC,IAAI,CAAC,CAAC;AACrB;AAEA,OAAO,SAASC,kBAAkBA,CAACP,MAAM,EAAE;EAACC,mBAAmB,GAAG;AAAI,CAAC,GAAG,CAAC,CAAC,EAAE;EAC7E,IAAIP,OAAO,CAACQ,QAAQ,KAAK,QAAQ,EAAE;IAClC,MAAM,IAAIC,KAAK,CAAC,YAAY,CAAC;EAC9B;EAEA,MAAMC,eAAe,GAAGH,mBAAmB,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC;EAE1D,MAAMI,MAAM,GAAGR,YAAY,CAAC,WAAW,EAAE,CAAC,IAAI,EAAEG,MAAM,EAAE,GAAGI,eAAe,CAAC,EAAE;IAC5EI,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;IACnCC,OAAO,EAAE;EACV,CAAC,CAAC;EAEF,OAAOL,MAAM,CAACC,IAAI,CAAC,CAAC;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}