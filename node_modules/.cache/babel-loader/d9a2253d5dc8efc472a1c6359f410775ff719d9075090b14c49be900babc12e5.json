{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst fs_1 = require(\"fs\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst log = debug_1.default('@kwsites/file-exists');\nfunction check(path, isFile, isDirectory) {\n  log(`checking %s`, path);\n  try {\n    const stat = fs_1.statSync(path);\n    if (stat.isFile() && isFile) {\n      log(`[OK] path represents a file`);\n      return true;\n    }\n    if (stat.isDirectory() && isDirectory) {\n      log(`[OK] path represents a directory`);\n      return true;\n    }\n    log(`[FAIL] path represents something other than a file or directory`);\n    return false;\n  } catch (e) {\n    if (e.code === 'ENOENT') {\n      log(`[FAIL] path is not accessible: %o`, e);\n      return false;\n    }\n    log(`[FATAL] %o`, e);\n    throw e;\n  }\n}\n/**\n * Synchronous validation of a path existing either as a file or as a directory.\n *\n * @param {string} path The path to check\n * @param {number} type One or both of the exported numeric constants\n */\nfunction exists(path, type = exports.READABLE) {\n  return check(path, (type & exports.FILE) > 0, (type & exports.FOLDER) > 0);\n}\nexports.exists = exists;\n/**\n * Constant representing a file\n */\nexports.FILE = 1;\n/**\n * Constant representing a folder\n */\nexports.FOLDER = 2;\n/**\n * Constant representing either a file or a folder\n */\nexports.READABLE = exports.FILE + exports.FOLDER;","map":{"version":3,"names":["fs_1","require","debug_1","__importDefault","log","default","check","path","isFile","isDirectory","stat","statSync","e","code","exists","type","exports","READABLE","FILE","FOLDER"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;AAAA,MAAAA,IAAA,GAAAC,OAAA;AACA,MAAAC,OAAA,GAAAC,eAAA,CAAAF,OAAA;AAEA,MAAMG,GAAG,GAAGF,OAAA,CAAAG,OAAK,CAAC,sBAAsB,CAAC;AAEzC,SAASC,KAAKA,CAACC,IAAY,EAAEC,MAAe,EAAEC,WAAoB;EAC/DL,GAAG,CAAC,aAAa,EAAEG,IAAI,CAAC;EAExB,IAAI;IACD,MAAMG,IAAI,GAAGV,IAAA,CAAAW,QAAQ,CAACJ,IAAI,CAAC;IAE3B,IAAIG,IAAI,CAACF,MAAM,EAAE,IAAIA,MAAM,EAAE;MAC1BJ,GAAG,CAAC,6BAA6B,CAAC;MAClC,OAAO,IAAI;;IAGd,IAAIM,IAAI,CAACD,WAAW,EAAE,IAAIA,WAAW,EAAE;MACpCL,GAAG,CAAC,kCAAkC,CAAC;MACvC,OAAO,IAAI;;IAGdA,GAAG,CAAC,iEAAiE,CAAC;IACtE,OAAO,KAAK;GACd,CAAC,OAAOQ,CAAC,EAAE;IACT,IAAIA,CAAC,CAACC,IAAI,KAAK,QAAQ,EAAE;MACtBT,GAAG,CAAC,mCAAmC,EAAEQ,CAAC,CAAC;MAC3C,OAAO,KAAK;;IAGfR,GAAG,CAAC,YAAY,EAAEQ,CAAC,CAAC;IACpB,MAAMA,CAAC;;AAEb;AAEA;;;;;;AAMA,SAAgBE,MAAMA,CAACP,IAAY,EAAEQ,IAAA,GAAeC,OAAA,CAAAC,QAAQ;EACzD,OAAOX,KAAK,CAACC,IAAI,EAAE,CAACQ,IAAI,GAAGC,OAAA,CAAAE,IAAI,IAAI,CAAC,EAAE,CAACH,IAAI,GAAGC,OAAA,CAAAG,MAAM,IAAI,CAAC,CAAC;AAC7D;AAFAH,OAAA,CAAAF,MAAA,GAAAA,MAAA;AAIA;;;AAGaE,OAAA,CAAAE,IAAI,GAAG,CAAC;AAErB;;;AAGaF,OAAA,CAAAG,MAAM,GAAG,CAAC;AAEvB;;;AAGaH,OAAA,CAAAC,QAAQ,GAAGD,OAAA,CAAAE,IAAI,GAAGF,OAAA,CAAAG,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}