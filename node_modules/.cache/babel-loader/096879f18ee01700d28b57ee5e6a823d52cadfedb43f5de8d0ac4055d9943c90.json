{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HarshitSrivastava\\\\Desktop\\\\Practice\\\\React\\\\Project2\\\\my-app\\\\src\\\\WelcomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import GitHubRepoCloner from './GitHubRepoCloner';\n// import OpenInVSCodeButton from './OpenInVSCodeButton'; \nimport OpenRepositoryButton from './OpenRepositoryButton';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WelcomePage = ({\n  location\n}) => {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepo, setSelectedRepo] = useState(null); // Track the selected repository\n  const searchParams = new URLSearchParams(location.search);\n  const accessToken = searchParams.get('token');\n\n  // const githubRepositoryUrl = 'https://github.com/harshit2024/RestApi';\n  const repositoryUrl = 'harshit2024/RestApi';\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      try {\n        // Fetch user repositories using the access token\n        const response = await axios.get('https://api.github.com/user/repos', {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        setRepositories(response.data);\n      } catch (error) {\n        console.error('Error fetching repositories:', error);\n      }\n    };\n    if (accessToken) {\n      fetchRepositories();\n    }\n  }, [accessToken]);\n  const handleSelectRepo = repoId => {\n    // Handle the selected repository, e.g., redirect to a page or perform an action\n    setSelectedRepo(repoId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '20vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the App!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Repositories:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedRepo,\n      onChange: e => handleSelectRepo(e.target.value),\n      style: {\n        width: '300px',\n        height: '40px'\n      } // Set the width of the dropdown\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: null,\n        children: \"Select a Repository\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), repositories.map(repo => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: repo.id,\n        children: repo.full_name\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OpenRepositoryButton, {\n      repositoryUrl: repositoryUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(WelcomePage, \"OSc78n3EFGmYkl9NT9VY2TGhTQE=\");\n_c = WelcomePage;\nexport default WelcomePage;\nvar _c;\n$RefreshReg$(_c, \"WelcomePage\");","map":{"version":3,"names":["React","useEffect","useState","OpenRepositoryButton","axios","jsxDEV","_jsxDEV","WelcomePage","location","_s","repositories","setRepositories","selectedRepo","setSelectedRepo","searchParams","URLSearchParams","search","accessToken","get","repositoryUrl","fetchRepositories","response","headers","Authorization","data","error","console","handleSelectRepo","repoId","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","width","height","map","repo","id","full_name","_c","$RefreshReg$"],"sources":["C:/Users/HarshitSrivastava/Desktop/Practice/React/Project2/my-app/src/WelcomePage.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\n// import GitHubRepoCloner from './GitHubRepoCloner';\r\n// import OpenInVSCodeButton from './OpenInVSCodeButton'; \r\nimport OpenRepositoryButton from './OpenRepositoryButton'\r\nimport axios from 'axios';\r\n \r\nconst WelcomePage = ({ location }) => {\r\n  const [repositories, setRepositories] = useState([]);\r\n  const [selectedRepo, setSelectedRepo] = useState(null); // Track the selected repository\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const accessToken = searchParams.get('token');\r\n\r\n  // const githubRepositoryUrl = 'https://github.com/harshit2024/RestApi';\r\n  const repositoryUrl = 'harshit2024/RestApi';\r\n  \r\n \r\n  useEffect(() => {\r\n    const fetchRepositories = async () => {\r\n      try {\r\n        // Fetch user repositories using the access token\r\n        const response = await axios.get('https://api.github.com/user/repos', {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n \r\n        setRepositories(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching repositories:', error);\r\n      }\r\n    };\r\n \r\n    if (accessToken) {\r\n      fetchRepositories();\r\n    }\r\n  }, [accessToken]);\r\n \r\n  const handleSelectRepo = (repoId) => {\r\n    // Handle the selected repository, e.g., redirect to a page or perform an action\r\n    setSelectedRepo(repoId);\r\n  };\r\n \r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '20vh' }}>\r\n      <h2>Welcome to the App!</h2>\r\n      {/* <p>Access Token: {accessToken}</p> */}\r\n      <h3>Your Repositories:</h3>\r\n      <select\r\n        value={selectedRepo}\r\n        onChange={(e) => handleSelectRepo(e.target.value)}\r\n        style={{ width: '300px', height: '40px' }} // Set the width of the dropdown\r\n      >\r\n        <option value={null}>Select a Repository</option>\r\n        {repositories.map(repo => (\r\n          <option key={repo.id} value={repo.id}>{repo.full_name}</option>\r\n        ))}\r\n      </select>\r\n      {/* {selectedRepo && (\r\n        <div>\r\n          <p>{repositories.find(repo => repo.id === selectedRepo)?.full_name}</p>\r\n        </div>\r\n      )} */}\r\n    {/* <GitHubRepoCloner /> */}\r\n\r\n     {/* <OpenInVSCodeButton repositoryUrl={githubRepositoryUrl} access_Token={accessToken} /> */}\r\n\r\n     <OpenRepositoryButton repositoryUrl={repositoryUrl} />\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default WelcomePage;\r\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}