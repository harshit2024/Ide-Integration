{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HarshitSrivastava\\\\Desktop\\\\Practice\\\\React\\\\Project2\\\\my-app\\\\src\\\\WelcomePage.js\",\n  _s = $RefreshSig$();\n// // WelcomePage.js\n\n// // WelcomePage.js\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const WelcomePage = ({ location }) => {\n//   const [repositories, setRepositories] = useState([]);\n//   const searchParams = new URLSearchParams(location.search);\n//   const accessToken = searchParams.get('token');\n\n//   useEffect(() => {\n//     const fetchRepositories = async () => {\n//       try {\n//         // Fetch user repositories using the access token\n//         const response = await axios.get('https://api.github.com/user/repos', {\n//           headers: {\n//             Authorization: `Bearer ${accessToken}`,\n//           },\n//         });\n\n//         setRepositories(response.data);\n//       } catch (error) {\n//         console.error('Error fetching repositories:', error);\n//       }\n//     };\n\n//     if (accessToken) {\n//       fetchRepositories();\n//     }\n//   }, [accessToken]);\n\n//   return (\n//     <div>\n//       <h2>Welcome to the App!</h2>\n//       <p>Access Token: {accessToken}</p>\n//       <h3>Your Repositories:</h3>\n//       <ul>\n//         {repositories.map(repo => (\n//           <li key={repo.id}>{repo.full_name}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default WelcomePage;\n\n// WelcomePage.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WelcomePage = ({\n  location\n}) => {\n  _s();\n  var _repositories$find;\n  const [repositories, setRepositories] = useState([]);\n  const [selectedRepo, setSelectedRepo] = useState(null); // Track the selected repository\n  const searchParams = new URLSearchParams(location.search);\n  const accessToken = searchParams.get('token');\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      try {\n        // Fetch user repositories using the access token\n        const response = await axios.get('https://api.github.com/user/repos', {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        setRepositories(response.data);\n      } catch (error) {\n        console.error('Error fetching repositories:', error);\n      }\n    };\n    if (accessToken) {\n      fetchRepositories();\n    }\n  }, [accessToken]);\n  const handleSelectRepo = repoId => {\n    // Handle the selected repository, e.g., redirect to a page or perform an action\n    setSelectedRepo(repoId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the App!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Repositories:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedRepo,\n      onChange: e => handleSelectRepo(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: null,\n        children: \"Select a Repository\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), repositories.map(repo => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: repo.id,\n        children: repo.full_name\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), selectedRepo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: (_repositories$find = repositories.find(repo => repo.id === selectedRepo)) === null || _repositories$find === void 0 ? void 0 : _repositories$find.full_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(WelcomePage, \"OSc78n3EFGmYkl9NT9VY2TGhTQE=\");\n_c = WelcomePage;\nexport default WelcomePage;\nvar _c;\n$RefreshReg$(_c, \"WelcomePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","WelcomePage","location","_s","_repositories$find","repositories","setRepositories","selectedRepo","setSelectedRepo","searchParams","URLSearchParams","search","accessToken","get","fetchRepositories","response","headers","Authorization","data","error","console","handleSelectRepo","repoId","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","repo","id","full_name","find","_c","$RefreshReg$"],"sources":["C:/Users/HarshitSrivastava/Desktop/Practice/React/Project2/my-app/src/WelcomePage.js"],"sourcesContent":["\r\n// // WelcomePage.js\r\n \r\n// // WelcomePage.js\r\n \r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n \r\n// const WelcomePage = ({ location }) => {\r\n//   const [repositories, setRepositories] = useState([]);\r\n//   const searchParams = new URLSearchParams(location.search);\r\n//   const accessToken = searchParams.get('token');\r\n \r\n//   useEffect(() => {\r\n//     const fetchRepositories = async () => {\r\n//       try {\r\n//         // Fetch user repositories using the access token\r\n//         const response = await axios.get('https://api.github.com/user/repos', {\r\n//           headers: {\r\n//             Authorization: `Bearer ${accessToken}`,\r\n//           },\r\n//         });\r\n \r\n//         setRepositories(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching repositories:', error);\r\n//       }\r\n//     };\r\n \r\n//     if (accessToken) {\r\n//       fetchRepositories();\r\n//     }\r\n//   }, [accessToken]);\r\n \r\n//   return (\r\n//     <div>\r\n//       <h2>Welcome to the App!</h2>\r\n//       <p>Access Token: {accessToken}</p>\r\n//       <h3>Your Repositories:</h3>\r\n//       <ul>\r\n//         {repositories.map(repo => (\r\n//           <li key={repo.id}>{repo.full_name}</li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n \r\n// export default WelcomePage;\r\n \r\n// WelcomePage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n \r\nconst WelcomePage = ({ location }) => {\r\n  const [repositories, setRepositories] = useState([]);\r\n  const [selectedRepo, setSelectedRepo] = useState(null); // Track the selected repository\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const accessToken = searchParams.get('token');\r\n \r\n  useEffect(() => {\r\n    const fetchRepositories = async () => {\r\n      try {\r\n        // Fetch user repositories using the access token\r\n        const response = await axios.get('https://api.github.com/user/repos', {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n \r\n        setRepositories(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching repositories:', error);\r\n      }\r\n    };\r\n \r\n    if (accessToken) {\r\n      fetchRepositories();\r\n    }\r\n  }, [accessToken]);\r\n \r\n  const handleSelectRepo = (repoId) => {\r\n    // Handle the selected repository, e.g., redirect to a page or perform an action\r\n    setSelectedRepo(repoId);\r\n  };\r\n \r\n  return (\r\n    <div>\r\n      <h2>Welcome to the App!</h2>\r\n      {/* <p>Access Token: {accessToken}</p> */}\r\n      <h3>Your Repositories:</h3>\r\n      <select value={selectedRepo} onChange={(e) => handleSelectRepo(e.target.value)}>\r\n        <option value={null}>Select a Repository</option>\r\n        {repositories.map(repo => (\r\n          <option key={repo.id} value={repo.id}>{repo.full_name}</option>\r\n        ))}\r\n      </select>\r\n      {selectedRepo && (\r\n        <div>\r\n          {/* <h4>Selected Repository:</h4> */}\r\n          <p>{repositories.find(repo => repo.id === selectedRepo)?.full_name}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default WelcomePage;\r\n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}