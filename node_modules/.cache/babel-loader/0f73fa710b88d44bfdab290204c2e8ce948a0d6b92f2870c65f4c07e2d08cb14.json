{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HarshitSrivastava\\\\Desktop\\\\Practice\\\\React\\\\Project2\\\\my-app\\\\src\\\\CloneRepositoryButton.jsx\",\n  _s = $RefreshSig$();\n// CloneRepositoryButton.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NodeGit = require('nodegit');\nconst CloneRepositoryButton = () => {\n  _s();\n  const [repositoryInfo, setRepositoryInfo] = useState({\n    owner: 'harshit2024',\n    repo: 'RestApi'\n  });\n  const [cloningStatus, setCloningStatus] = useState('');\n  const handleCloneRepository = async () => {\n    const repositoryURL = 'https://github.com/harshit2024/RestApi.git';\n    const localPath = 'C:/Users/HarshitSrivastava/Desktop/clone';\n    NodeGit.Clone(repositoryURL, localPath).then(repository => {\n      console.log('Repository cloned successfully:', repository);\n    }).catch(error => {\n      console.error('Error cloning repository:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCloneRepository,\n      children: \"Clone Repository\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: cloningStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CloneRepositoryButton, \"JMQ2KrqmUOiPGQYWBm9fRYILJEY=\");\n_c = CloneRepositoryButton;\nexport default CloneRepositoryButton;\nvar _c;\n$RefreshReg$(_c, \"CloneRepositoryButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NodeGit","require","CloneRepositoryButton","_s","repositoryInfo","setRepositoryInfo","owner","repo","cloningStatus","setCloningStatus","handleCloneRepository","repositoryURL","localPath","Clone","then","repository","console","log","catch","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HarshitSrivastava/Desktop/Practice/React/Project2/my-app/src/CloneRepositoryButton.jsx"],"sourcesContent":["// CloneRepositoryButton.jsx\r\nimport React, { useState } from 'react';\r\nconst NodeGit = require('nodegit');\r\nconst CloneRepositoryButton = () => {\r\n  const [repositoryInfo, setRepositoryInfo] = useState({\r\n    owner: 'harshit2024',\r\n    repo: 'RestApi',\r\n  });\r\n  const [cloningStatus, setCloningStatus] = useState('');\r\n\r\n  const handleCloneRepository = async () => {\r\n\r\n\r\n    const repositoryURL = 'https://github.com/harshit2024/RestApi.git';\r\n    const localPath = 'C:/Users/HarshitSrivastava/Desktop/clone';\r\n    \r\n    NodeGit.Clone(repositoryURL, localPath)\r\n      .then(repository => {\r\n        console.log('Repository cloned successfully:', repository);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error cloning repository:', error);\r\n      });\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleCloneRepository}>Clone Repository</button>\r\n      <p>{cloningStatus}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CloneRepositoryButton;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC;IACnDS,KAAK,EAAE,aAAa;IACpBC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IAGxC,MAAMC,aAAa,GAAG,4CAA4C;IAClE,MAAMC,SAAS,GAAG,0CAA0C;IAE5DZ,OAAO,CAACa,KAAK,CAACF,aAAa,EAAEC,SAAS,CAAC,CACpCE,IAAI,CAACC,UAAU,IAAI;MAClBC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,UAAU,CAAC;IAC5D,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EAEN,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAQsB,OAAO,EAAEX,qBAAsB;MAAAU,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjE1B,OAAA;MAAAqB,QAAA,EAAIZ;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7BID,qBAAqB;AAAAwB,EAAA,GAArBxB,qBAAqB;AA+B3B,eAAeA,qBAAqB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}