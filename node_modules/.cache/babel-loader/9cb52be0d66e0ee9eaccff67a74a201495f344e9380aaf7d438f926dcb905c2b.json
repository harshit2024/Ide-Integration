{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.memfs = exports.fs = exports.createFsFromVolume = exports.vol = exports.Volume = void 0;\nconst Stats_1 = require(\"./Stats\");\nconst Dirent_1 = require(\"./Dirent\");\nconst volume_1 = require(\"./volume\");\nconst constants_1 = require(\"./constants\");\nconst fsSynchronousApiList_1 = require(\"./node/lists/fsSynchronousApiList\");\nconst fsCallbackApiList_1 = require(\"./node/lists/fsCallbackApiList\");\nconst {\n  F_OK,\n  R_OK,\n  W_OK,\n  X_OK\n} = constants_1.constants;\nexports.Volume = volume_1.Volume;\n// Default volume.\nexports.vol = new volume_1.Volume();\nfunction createFsFromVolume(vol) {\n  const fs = {\n    F_OK,\n    R_OK,\n    W_OK,\n    X_OK,\n    constants: constants_1.constants,\n    Stats: Stats_1.default,\n    Dirent: Dirent_1.default\n  };\n  // Bind FS methods.\n  for (const method of fsSynchronousApiList_1.fsSynchronousApiList) if (typeof vol[method] === 'function') fs[method] = vol[method].bind(vol);\n  for (const method of fsCallbackApiList_1.fsCallbackApiList) if (typeof vol[method] === 'function') fs[method] = vol[method].bind(vol);\n  fs.StatWatcher = vol.StatWatcher;\n  fs.FSWatcher = vol.FSWatcher;\n  fs.WriteStream = vol.WriteStream;\n  fs.ReadStream = vol.ReadStream;\n  fs.promises = vol.promises;\n  fs._toUnixTimestamp = volume_1.toUnixTimestamp;\n  fs.__vol = vol;\n  return fs;\n}\nexports.createFsFromVolume = createFsFromVolume;\nexports.fs = createFsFromVolume(exports.vol);\n/**\n * Creates a new file system instance.\n *\n * @param json File system structure expressed as a JSON object.\n *        Use `null` for empty directories and empty string for empty files.\n * @param cwd Current working directory. The JSON structure will be created\n *        relative to this path.\n * @returns A `memfs` file system instance, which is a drop-in replacement for\n *          the `fs` module.\n */\nconst memfs = (json = {}, cwd = '/') => {\n  const vol = exports.Volume.fromNestedJSON(json, cwd);\n  const fs = createFsFromVolume(vol);\n  return {\n    fs,\n    vol\n  };\n};\nexports.memfs = memfs;\nmodule.exports = Object.assign(Object.assign({}, module.exports), exports.fs);\nmodule.exports.semantic = true;","map":{"version":3,"names":["Stats_1","require","Dirent_1","volume_1","constants_1","fsSynchronousApiList_1","fsCallbackApiList_1","F_OK","R_OK","W_OK","X_OK","constants","exports","Volume","vol","createFsFromVolume","fs","Stats","default","Dirent","method","fsSynchronousApiList","bind","fsCallbackApiList","StatWatcher","FSWatcher","WriteStream","ReadStream","promises","_toUnixTimestamp","toUnixTimestamp","__vol","memfs","json","cwd","fromNestedJSON","module","Object","assign","semantic"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AACA,MAAAC,QAAA,GAAAD,OAAA;AACA,MAAAE,QAAA,GAAAF,OAAA;AASA,MAAAG,WAAA,GAAAH,OAAA;AAGA,MAAAI,sBAAA,GAAAJ,OAAA;AACA,MAAAK,mBAAA,GAAAL,OAAA;AACA,MAAM;EAAEM,IAAI;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAI,CAAE,GAAGN,WAAA,CAAAO,SAAS;AAG/BC,OAAA,CAAAC,MAAM,GAAGV,QAAA,CAAAU,MAAO;AAE7B;AACaD,OAAA,CAAAE,GAAG,GAAG,IAAIX,QAAA,CAAAU,MAAO,EAAE;AAchC,SAAgBE,kBAAkBA,CAACD,GAAY;EAC7C,MAAME,EAAE,GAAG;IAAET,IAAI;IAAEC,IAAI;IAAEC,IAAI;IAAEC,IAAI;IAAEC,SAAS,EAATP,WAAA,CAAAO,SAAS;IAAEM,KAAK,EAALjB,OAAA,CAAAkB,OAAK;IAAEC,MAAM,EAANjB,QAAA,CAAAgB;EAAM,CAAgB;EAE7E;EACA,KAAK,MAAME,MAAM,IAAIf,sBAAA,CAAAgB,oBAAoB,EAAE,IAAI,OAAOP,GAAG,CAACM,MAAM,CAAC,KAAK,UAAU,EAAEJ,EAAE,CAACI,MAAM,CAAC,GAAGN,GAAG,CAACM,MAAM,CAAC,CAACE,IAAI,CAACR,GAAG,CAAC;EACpH,KAAK,MAAMM,MAAM,IAAId,mBAAA,CAAAiB,iBAAiB,EAAE,IAAI,OAAOT,GAAG,CAACM,MAAM,CAAC,KAAK,UAAU,EAAEJ,EAAE,CAACI,MAAM,CAAC,GAAGN,GAAG,CAACM,MAAM,CAAC,CAACE,IAAI,CAACR,GAAG,CAAC;EAEjHE,EAAE,CAACQ,WAAW,GAAGV,GAAG,CAACU,WAAW;EAChCR,EAAE,CAACS,SAAS,GAAGX,GAAG,CAACW,SAAS;EAC5BT,EAAE,CAACU,WAAW,GAAGZ,GAAG,CAACY,WAAW;EAChCV,EAAE,CAACW,UAAU,GAAGb,GAAG,CAACa,UAAU;EAC9BX,EAAE,CAACY,QAAQ,GAAGd,GAAG,CAACc,QAAQ;EAE1BZ,EAAE,CAACa,gBAAgB,GAAG1B,QAAA,CAAA2B,eAAe;EACpCd,EAAU,CAACe,KAAK,GAAGjB,GAAG;EAEvB,OAAOE,EAAE;AACX;AAjBAJ,OAAA,CAAAG,kBAAA,GAAAA,kBAAA;AAmBaH,OAAA,CAAAI,EAAE,GAAQD,kBAAkB,CAACH,OAAA,CAAAE,GAAG,CAAC;AAE9C;;;;;;;;;;AAUO,MAAMkB,KAAK,GAAGA,CAACC,IAAA,GAA4B,EAAE,EAAEC,GAAA,GAAc,GAAG,KAA+B;EACpG,MAAMpB,GAAG,GAAGF,OAAA,CAAAC,MAAM,CAACsB,cAAc,CAACF,IAAI,EAAEC,GAAG,CAAC;EAC5C,MAAMlB,EAAE,GAAGD,kBAAkB,CAACD,GAAG,CAAC;EAClC,OAAO;IAAEE,EAAE;IAAEF;EAAG,CAAE;AACpB,CAAC;AAJYF,OAAA,CAAAoB,KAAK,GAAAA,KAAA;AASlBI,MAAM,CAACxB,OAAO,GAAAyB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQF,MAAM,CAACxB,OAAO,GAAKA,OAAA,CAAAI,EAAE,CAAE;AAC7CoB,MAAM,CAACxB,OAAO,CAAC2B,QAAQ,GAAG,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}